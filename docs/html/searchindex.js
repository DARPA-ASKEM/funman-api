Search.setIndex({"docnames": ["classes", "funman", "funman.api", "funman.model", "funman.representation", "funman.scenario", "funman.search", "funman.translate", "funman.utils", "index", "packages", "sw_use_cases", "use_cases"], "filenames": ["classes.rst", "funman.rst", "funman.api.rst", "funman.model.rst", "funman.representation.rst", "funman.scenario.rst", "funman.search.rst", "funman.translate.rst", "funman.utils.rst", "index.rst", "packages.rst", "sw_use_cases.rst", "use_cases.rst"], "titles": ["Class Diagram", "funman package", "funman.api package", "funman.model package", "funman.representation package", "funman.scenario package", "funman.search package", "funman.translate package", "funman.utils package", "Welcome to funman\u2019s documentation!", "Package Diagram", "Space Weather Use Cases", "Epidemiology Use Cases"], "terms": {"1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "api": 1, "read_root": [1, 2], "solve_consist": [1, 2], "solve_parameter_synthesi": [1, 2], "solve_simul": [1, 2], "client": 1, "make_cli": [1, 2], "server": 1, "run_in_thread": [1, 2], "serverconfig": [1, 2], "model": [1, 4, 5, 6, 7, 9], "bilay": [1, 5, 9], "bilayerdynam": [1, 3, 5, 12], "to_dot": [1, 3], "bilayeredg": [1, 3, 5], "src": [1, 3, 5], "tgt": [1, 3, 5], "bilayerfluxnod": [1, 3, 5], "index": [1, 3, 5, 9], "metadata": [1, 3, 5], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 11], "bilayergraph": [1, 3, 5], "json_graph": [1, 3, 5], "bilayermeasur": [1, 3, 5], "flux": [1, 3, 5], "input_edg": [1, 3, 5], "observ": [1, 3, 5], "output_edg": [1, 3, 5], "state": [1, 3, 5, 6, 7], "bilayermetadata": [1, 3, 5], "initial_valu": [1, 3, 5], "lb": [1, 3, 4, 5, 12], "ref": [1, 3, 4, 5, 6, 7], "type": [1, 2, 3, 4, 5, 6, 7, 12], "ub": [1, 3, 4, 5, 7, 12], "bilayermodel": [1, 3, 5, 7, 12], "identical_paramet": [1, 3, 5], "measur": [1, 3, 5], "default_encod": [1, 3], "bilayernegativeedg": [1, 3], "bilayernod": [1, 3, 5], "bilayerpositiveedg": [1, 3], "bilayerstatenod": [1, 3, 5], "decapod": [1, 5, 9], "decapodedynam": [1, 3, 5], "decapodemodel": [1, 3, 5, 11], "encod": [1, 5, 12], "encodedmodel": [1, 3, 5, 7, 12], "gromet": [1, 12], "grometmodel": [1, 3], "init_valu": [1, 3, 5, 12], "parameter_bound": [1, 3, 5, 11, 12], "structural_parameter_bound": [1, 3, 5], "from_gromet_fil": [1, 3, 12], "variabl": [1, 3, 4, 5, 7, 12], "queri": [1, 5, 7, 11, 12], "queryand": [1, 3, 11], "queryencod": [1, 3, 5], "queryequ": [1, 3, 11], "at_end": [1, 3, 5, 11], "valu": [1, 3, 4, 5, 7, 11, 12], "queryfunct": [1, 3, 5, 12], "function": [1, 2, 3, 5, 8, 12], "queryg": [1, 3], "queryl": [1, 3, 5, 12], "querytru": [1, 3, 5, 11], "simul": [1, 2, 9, 11], "simulatormodel": [1, 3, 5, 7, 12], "main_fn": [1, 3, 5], "represent": [1, 3, 5, 6, 7], "box": [1, 4, 5, 6, 7], "bound": [1, 3, 4, 5, 7, 12], "cached_width": [1, 4, 5], "label": [1, 4, 5], "contain": [1, 2, 3, 4, 5, 6, 12], "contains_point": [1, 4], "equal": [1, 4, 11, 12], "finit": [1, 4], "intersect": [1, 4, 12], "project": [1, 4, 9], "split": [1, 4], "varianc": [1, 4, 11], "width": [1, 4, 5], "interv": [1, 4, 5, 7, 11, 12], "contains_valu": [1, 4], "disjoint": [1, 4], "meet": [1, 4], "midpoint": [1, 4], "subtract": [1, 4], "union": [1, 3, 4, 5, 7], "name": [1, 3, 4, 5, 7, 12], "symbol": [1, 4, 5, 7, 12], "timed_copi": [1, 4], "parameterspac": [1, 4, 5, 6, 12], "false_box": [1, 4, 5, 12], "false_point": [1, 4, 5], "true_box": [1, 4, 5, 11, 12], "true_point": [1, 4, 5], "append_result": [1, 4], "compar": [1, 4, 9], "consist": [1, 3, 4, 7, 9], "construct_all_equ": [1, 4, 12], "decode_labeled_object": [1, 4], "plot": [1, 4, 5, 6, 8], "symmetric_differ": [1, 4], "point": [1, 4, 5, 6, 7, 11, 12], "from_dict": [1, 4], "scenario": [1, 2, 3, 6, 7, 11, 12], "consistencyscenario": [1, 2, 5, 12], "solv": [1, 2, 5, 6, 11, 12], "consistencyscenarioresult": [1, 2, 5, 11, 12], "datafram": [1, 5, 11], "parameter_synthesi": 1, "parametersynthesisscenario": [1, 2, 5, 6, 12], "parametersynthesisscenarioresult": [1, 2, 5, 11, 12], "parameter_spac": [1, 5, 11, 12], "true_point_timeseri": [1, 5, 11], "analysisscenario": [1, 5, 6], "analysisscenarioresult": [1, 5], "analysisscenarioresultexcept": [1, 5], "except": [1, 5, 7, 8, 11], "simulationscenario": [1, 2, 5, 12], "simulationscenarioresult": [1, 2, 5, 12], "query_satisfi": [1, 5, 12], "result": [1, 2, 3, 4, 5, 6, 8, 11, 12], "search": [1, 4, 5, 8, 9, 12], "box_search": 1, "boxsearch": [1, 5, 6, 12], "store_smtlib": [1, 6], "boxsearchepisod": [1, 6], "statist": [1, 5, 6], "boxsearchepisodemp": [1, 6], "searchepisod": [1, 6], "config": [1, 2, 3, 4, 5, 6, 7, 11, 12], "problem": [1, 5, 6], "num_paramet": [1, 6], "searchstaticsmp": [1, 6], "searchstatist": [1, 6], "smt_check": 1, "smtcheck": [1, 6], "expand": [1, 6, 8], "translat": [1, 9], "bilayerencod": [1, 7], "encode_model": [1, 7], "encode_model_tim": [1, 7], "get_structural_configur": [1, 7], "get_timepoint": [1, 7], "parameter_valu": [1, 7], "symbol_valu": [1, 7], "decapodeencod": [1, 7], "encodedencod": [1, 3, 7], "grometencod": [1, 7], "grometencodingopt": [1, 7], "defaultencod": [1, 7], "box_to_smt": [1, 7], "encode_queri": [1, 7], "interval_to_smt": [1, 7], "point_to_smt": [1, 7], "symbol_timeseri": [1, 7], "encodingopt": [1, 7], "util": [1, 3, 4, 5, 6, 7], "handler": 1, "noopresulthandl": [1, 8], "close": [1, 7, 8], "open": [1, 4, 5, 8], "process": [1, 6, 7, 8], "resultcombinedhandl": [1, 8], "resulthandl": [1, 8], "waitact": [1, 8], "run": [1, 2, 6, 8, 12], "math_util": 1, "gt": [1, 8], "gte": [1, 8], "lt": [1, 8], "lte": [1, 8], "minu": [1, 8], "plu": [1, 8], "smtlib_util": 1, "funmansmtdagprint": [1, 8], "walk_real_const": [1, 8], "funmansmtlibscript": [1, 8], "serial": [1, 8], "funmansmtprint": [1, 8], "model_to_dict": [1, 8], "smtlibscript_from_formula": [1, 8], "smtlibscript_from_formula_list": [1, 8], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12], "defint": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9], "within": [1, 11], "funmanconfig": [1, 2, 3, 5, 6, 7, 11], "pydant": [1, 3, 4, 5, 6, 7], "main": [1, 3, 4, 5, 6, 7], "basemodel": [1, 3, 4, 5, 6, 7], "defin": [1, 3, 4, 5, 6, 7, 12], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "primari": 1, "entri": [1, 6], "analysi": [1, 4, 5, 6, 7, 9, 12], "base": [1, 2, 3, 4, 5, 6, 7, 8, 12], "definit": [1, 2, 3, 4, 5, 6, 7], "configur": [1, 2, 4, 6, 7, 12], "object": [1, 2, 3, 4, 5, 6, 7], "show": [1, 3, 4, 5, 6, 7, 11], "json": [1, 2, 3, 4, 5, 6, 7, 12], "schema": [1, 3, 4, 5, 6, 7], "titl": [1, 3, 4, 5, 6, 7], "descript": [1, 2, 3, 4, 5, 6, 7], "properti": [1, 3, 4, 5, 6, 7], "toler": [1, 2, 6, 7, 12], "default": [1, 2, 3, 4, 5, 6, 7, 8], "number": [1, 3, 4, 5, 6, 7, 12], "queue_timeout": [1, 2, 6, 7], "queue": [1, 6, 7], "timeout": [1, 6, 7], "integ": [1, 3, 4, 5, 6, 7], "number_of_process": [1, 2, 6, 7, 11], "Of": [1, 6, 7], "20": [1, 2, 6, 7, 12], "wait_timeout": [1, 2, 6, 7], "wait": [1, 6, 7, 8], "wait_action_timeout": [1, 2, 6, 7], "action": [1, 6, 7], "05": [1, 2, 6, 7], "solver": [1, 2, 6, 7], "z3": [1, 2, 6, 7], "string": [1, 3, 4, 5, 6, 7], "num_step": [1, 2, 6, 7, 11], "num": [1, 6, 7], "step": [1, 6, 7, 12], "2": [1, 2, 4, 6, 7, 12], "step_siz": [1, 2, 6, 7, 11], "size": [1, 6, 7], "num_initial_box": [1, 2, 6, 7], "initi": [1, 3, 5, 6, 7, 11, 12], "save_smtlib": [1, 2, 6, 7], "save": [1, 6, 7], "smtlib": [1, 6, 7, 8, 12], "fals": [1, 2, 3, 4, 5, 6, 7, 11], "boolean": [1, 3, 5, 6, 7], "dreal_precis": [1, 2, 6, 7], "dreal": [1, 6, 7], "precis": [1, 6, 7], "001": [1, 2, 6, 7], "dreal_log_level": [1, 2, 6, 7], "log": [1, 6, 7], "level": [1, 6, 7], "off": [1, 2, 6, 7], "constraint_nois": [1, 2, 6, 7], "constraint": [1, 3, 5, 6, 7, 11, 12], "nois": [1, 6, 7], "initial_state_toler": [1, 2, 6, 7], "dreal_mct": [1, 2, 6, 7], "mct": [1, 6, 7], "arbitrary_types_allow": [1, 3, 5, 6, 7], "bool": [1, 3, 4, 5, 6, 7], "true": [1, 3, 4, 5, 6, 7, 8, 11], "underscore_attrs_are_priv": [1, 3, 4, 5, 6, 7], "field": [1, 3, 4, 5, 6, 7], "float": [1, 3, 4, 5, 7], "str": [1, 2, 3, 4, 5, 7], "int": [1, 2, 3, 4, 5, 7, 12], "valid": [1, 5, 12], "import_dr": 1, "term": 1, "relax": [1, 11], "delta": 1, "factor": 1, "timestep": 1, "multiprocess": 1, "whether": [1, 3, 4, 5, 11, 12], "each": [1, 4, 5, 7, 11, 12], "smt": [1, 3, 5, 7], "invoc": [1, 5], "an": [1, 3, 4, 5, 7, 8, 11, 12], "file": [1, 2, 8, 11, 12], "pysmt": [1, 3, 4, 5, 7, 8], "algorithm": [1, 5, 6], "specif": [1, 3, 5, 12], "approxim": 1, "time": [1, 4, 5], "sleep": 1, "proces": 1, "work": [1, 8, 12], "none": [1, 2, 3, 4, 5, 6, 7, 8], "procesess": 1, "evalu": [1, 3, 5, 6, 12], "The": [1, 3, 4, 5, 6, 7, 8, 11, 12], "i": [1, 3, 4, 5, 6, 7, 8, 11, 12], "perform": [1, 8, 12], "subject": [1, 5], "set": [1, 3, 5, 7, 12], "option": [1, 2, 3, 4, 5, 6, 7], "searchconfig": [1, 5, 6, 12], "method": [1, 2, 5, 6], "Its": 1, "input": [1, 3, 5, 6, 9, 12], "describ": 1, "setup": [1, 11], "techniqu": 1, "return": [1, 2, 3, 4, 5, 6, 7, 11, 12], "which": [1, 4, 5, 12], "compris": [1, 7], "all": [1, 3, 4, 5, 11, 12], "relev": 1, "output": [1, 3, 5, 9], "pertain": 1, "typic": 1, "appli": [1, 3, 5], "analyz": [1, 5], "data": [1, 4, 5, 6, 8, 11, 12], "other": [1, 4, 5, 7, 8, 11], "inform": [1, 8, 11], "produc": [1, 8], "implement": [1, 2], "multipl": [1, 6, 8], "current": [1, 3, 5], "includ": [1, 3, 4, 5, 6, 8, 12], "origin": [1, 12], "synthesi": [1, 2, 4, 5, 11], "gener": [1, 2, 3, 5, 6, 7, 8], "feasibl": [1, 5, 11, 12], "check": [1, 4, 5, 9], "parameter": 1, "self": [1, 3, 4, 7, 8, 11, 12], "rest": 2, "endpoint": 2, "start": [2, 8], "uvicorn": 2, "serv": 2, "rais": [2, 5, 7], "httpexcept": 2, "root": 2, "emtpi": 2, "dict": [2, 3, 4, 5, 7, 8], "async": 2, "consisist": 2, "usag": 2, "install_path": 2, "client_nam": 2, "openapi_url": 2, "http": 2, "8190": 2, "openapi": 2, "python": [2, 3, 5], "creat": [2, 3, 4, 6], "add": [2, 3], "sy": 2, "path": [2, 12], "overrid": 2, "allow": [2, 3, 6, 7, 8, 11], "thread": 2, "exampl": [2, 12], "notebook": 2, "app": 2, "host": 2, "port": 2, "log_level": 2, "info": 2, "abc": [3, 5, 6, 7, 8], "repres": [3, 4, 5, 7, 11, 12], "updat": [3, 5, 7], "dynam": [3, 5, 8], "graph": [3, 5], "node": [3, 5, 7, 8], "tangent": [3, 5], "next": [3, 5], "causal": [3, 5], "relationship": [3, 5, 9], "n": [3, 4, 5, 6], "requir": [3, 4, 5, 6, 7], "dot": 3, "visual": 3, "graphviz": 3, "digraph": 3, "enum": [3, 4, 5], "anyof": [3, 4, 5], "edg": [3, 5], "abstract": [3, 5, 6, 7, 8], "taken": [3, 5], "additionalproperti": [3, 4, 5], "allof": [3, 5], "liter": [3, 4], "A": [3, 4, 5, 6, 12], "complet": [3, 5], "It": [3, 4, 5, 6, 7, 11, 12], "attribut": [3, 4, 5], "deriv": [3, 5], "addit": [3, 5, 8, 12], "from": [3, 4, 5, 7, 8, 11, 12], "map": [3, 4, 5, 7], "list": [3, 4, 5, 7, 8, 12], "have": [3, 5, 12], "ident": [3, 5, 12], "lower": [3, 4, 5], "upper": [3, 4, 5, 7], "init": [3, 5], "arrai": [3, 4, 5], "item": [3, 4, 5], "structur": [3, 5], "posit": 3, "influenc": 3, "between": [3, 5, 9], "fluxnod": 3, "statenod": 3, "allow_inf_nan": 3, "hold": [3, 5], "formula": [3, 5, 6, 7, 8, 12], "meant": [3, 5], "wrap": [3, 5], "hand": [3, 5], "code": [3, 5], "extra": [3, 4, 5, 7], "relat": 3, "execut": [3, 4, 6, 12], "static": [3, 4], "gromet_path": [3, 12], "include_next_st": 3, "get": [3, 4, 5, 7, 12], "ar": [3, 4, 5, 11, 12], "combin": [3, 8], "determin": [3, 12], "satisfi": [3, 5, 11, 12], "conjunct": [3, 7], "conjoin": 3, "nparamet": [3, 5], "nqueri": [3, 5], "alreadi": [3, 5, 7], "fnode": [3, 4, 5, 7], "form": [3, 5], "var": [3, 4, 5, 11], "where": [3, 4, 5, 11, 12], "constant": [3, 5, 9], "last": [3, 5], "timepoint": [3, 4, 5, 7], "onli": [3, 4, 5], "nvariabl": [3, 5], "nvalu": 3, "nat_end": [3, 5], "At": [3, 5], "end": [3, 5, 8], "pass": [3, 5, 7], "constructor": [3, 5], "nlb": 3, "nub": [3, 5], "logic": [3, 5, 8], "e": [3, 4, 5, 7, 8, 11, 12], "doe": [3, 4, 5, 11], "place": [3, 5], "ani": [3, 5, 12], "upon": [3, 5], "fn": [3, 5, 9], "do": [3, 4], "reli": 3, "so": 3, "_description_": [3, 4], "interact": 3, "directli": 3, "dure": [4, 12], "dimension": [4, 5], "connect": [4, 5], "subset": [4, 5], "r": [4, 5, 12], "unknown": [4, 5, 6], "drop": [4, 5], "cach": [4, 5], "pair": [4, 5], "specifi": [4, 5, 11, 12], "x": [4, 5, 12], "exclud": 4, "correspond": [4, 5, 7, 12], "b2": [4, 12], "param_list": 4, "two": [4, 12], "consid": 4, "b1": [4, 12], "over": [4, 7, 11, 12], "restrict": 4, "comparison": 4, "dimens": [4, 5], "when": 4, "instersect": 4, "take": [4, 6], "select": 4, "vars_list": 4, "given": [4, 8, 9, 12], "b": 4, "anoth": 4, "": [4, 12], "onto": 4, "normal": 4, "along": [4, 6], "max": 4, "If": [4, 5, 8, 11], "provid": [4, 7, 11, 12], "pick": 4, "axi": 4, "maxim": 4, "distant": 4, "solut": [4, 5], "separ": 4, "overwrite_cach": 4, "maximum": 4, "stub": [4, 12], "mileston": 4, "8": [4, 12], "sensit": [4, 9], "p": [4, 7, 12], "non": 4, "overlap": 4, "a0": 4, "a1": 4, "b0": 4, "thei": 4, "intev": 4, "comput": 4, "averag": 4, "part": 4, "free": [4, 5], "ha": [4, 5, 7], "follow": [4, 5, 11, 12], "infin": [4, 5], "forbid": [4, 5], "smart_union": [4, 5], "inf": 4, "stamp": 4, "copi": 4, "g": [4, 11], "beta": 4, "becom": 4, "beta_t": 4, "t": [4, 12], "space": [4, 5, 6, 9, 12], "can": [4, 5, 11, 12], "featur": [4, 5], "These": [4, 5, 12], "collect": [4, 5], "either": [4, 5], "known": [4, 5], "nreturn": [4, 5], "nare": [4, 5], "nknown": [4, 5], "ps1": 4, "ps2": 4, "respect": [4, 12], "No": 4, "both": [4, 12], "obj": 4, "color": 4, "alpha": 4, "element": 4, "parmaet": 4, "existenti": 5, "quantifi": 5, "assign": [5, 7, 12], "unassign": 5, "find": [5, 9], "smt_encod": 5, "nmodel": 5, "nsmt_encod": 5, "indic": 5, "flag": 5, "nsearch": 5, "interpol": 5, "linear": 5, "extract": [5, 11, 12], "timeseri": [5, 7], "panda": 5, "fail": [5, 8], "kwarg": [5, 8], "matplotlib": 5, "failur": 5, "identifi": [5, 7, 12], "synthes": [5, 6, 12], "particular": 5, "multi": 5, "one": [5, 6, 12], "per": 5, "region": [5, 11], "invalid": 5, "nsynthes": 5, "nmulti": 5, "npoint": 5, "decompos": 5, "infeas": 5, "notimplementederror": 5, "todo": 5, "core": 5, "frame": 5, "assum": [5, 7], "genrat": 5, "malform": 5, "classmethod": 5, "subpackag": [5, 6, 9], "capabl": 5, "support": 6, "store": 6, "progress": [6, 12], "spawn": 6, "sever": [6, 8, 11], "parallel": 6, "treat": 6, "zeroth": 6, "special": [6, 12], "final": 6, "episod": [6, 8], "filenam": 6, "dbg": 6, "smt2": 6, "organ": 6, "intermedi": 6, "manag": 6, "syncmanag": 6, "coordin": 6, "declar": 6, "share": 6, "mainli": 6, "track": 6, "na": [6, 7], "also": [6, 12], "singl": [6, 12], "compil": 7, "seri": 7, "nformula": 7, "time_dependent_paramet": 7, "cannot": 7, "pysmtmodel": 7, "gather": 7, "model_encod": 7, "enocod": 7, "technic": 7, "through": 7, "help": 7, "make": 7, "uniform": 7, "been": 7, "act": 7, "noop": [7, 8], "maintain": 7, "nencodedmodel": 7, "nencod": 7, "convert": 7, "_gromet_fn": 7, "actual": 7, "closed_upper_bound": 7, "contraint": 7, "constrain": [7, 11], "interpret": 7, "pt": 7, "max_step": 7, "how": [7, 11, 12], "format": 7, "differ": [7, 11, 12], "deal": 8, "write": 8, "absenc": 8, "handl": 8, "listen": 8, "interfac": [8, 12], "sub": 8, "iter": 8, "invok": 8, "lh": 8, "rh": 8, "script": 8, "smtlibscript": 8, "printer": 8, "smtprinter": 8, "walker": 8, "tree": 8, "treewalk": 8, "smtdagprint": 8, "dag": 8, "dagwalk": 8, "stream": 8, "templat": 8, "def_": 8, "d": 8, "annot": 8, "arg": 8, "tri": 8, "environ": 8, "unsupportedoperatorerror": 8, "outstream": 8, "daggifi": 8, "command": 8, "epidemiologi": 9, "case": 9, "weather": 9, "regress": 9, "captur": 9, "behavior": [9, 12], "diagram": 9, "packag": 9, "submodul": 9, "modul": 9, "page": 9, "resid": [11, 12], "test": [11, 12], "involv": [11, 12], "funman": [11, 12], "reason": [11, 12], "about": [11, 12], "hydrostat": 11, "equat": 11, "tie": 11, "gcm": 11, "some": [11, 12], "expect": 11, "reliabl": 11, "sourc": 11, "first": [11, 12], "construct": [11, 12], "instanc": [11, 12], "ask": [11, 12], "answer": [11, 12], "m_bar": 11, "mean": 11, "molecular": 11, "mass": 11, "geopotenti": 11, "exce": [11, 12], "threshold": [11, 12], "succe": [11, 12], "def": [11, 12], "test_use_case_decapode_consist": 11, "1e": [11, 12], "10": [11, 12], "1000m": 11, "alitud": 11, "500mb": 11, "try": 11, "h": 11, "geopotential_threshold": 11, "setup_use_case_decapode_consist": 11, "m_mo": 11, "m_bar_consistency_valu": 11, "result_sat": 11, "assert": [11, 12], "ab": 11, "print": [11, 12], "success": 11, "altitud": 11, "f": [11, 12], "could": 11, "becaus": 11, "fix": 11, "similar": 11, "test_use_case_decapode_project": 11, "calcul": 11, "sat": 11, "exist": 11, "df": 11, "h_at_1000m": 11, "loc": 11, "z": 11, "1000": 11, "mb": 11, "rang": 11, "test_use_case_decapode_regress": 11, "100": 11, "setup_use_case_decapode_parameter_synthesi": 11, "len": [11, 12], "possibl": 11, "give": 11, "perturb": 11, "impact": 11, "same": [11, 12], "abov": [11, 12], "test_use_case_decapode_sensitivity_analysi": 11, "sample_true_box": 11, "distribut": 11, "due": 11, "under": 12, "below": 12, "previou": 12, "version": 12, "chime": 12, "sir": 12, "see": 12, "test_use_case_bilayer_consist": 12, "In": 12, "run_chime_sir": 12, "infect": 12, "cross": 12, "custom": 12, "referenc": 12, "does_not_cross_threshold": 12, "onc": 12, "simulatorscenario": 12, "agre": 12, "respons": 12, "compare_against_chime_sim": 12, "bilayer_path": 12, "infected_threshold": 12, "sim_result": 12, "i_t": 12, "consistency_result": 12, "from_json": 12, "against": 12, "o": 12, "join": 12, "resourc": 12, "chime_sir_dynamics_bilay": 12, "130": 12, "9998": 12, "test_use_case_simple_parameter_synthesi": 12, "test_use_case_bilayer_parameter_synthesi": 12, "y": 12, "sai": 12, "12": 12, "remain": 12, "real": 12, "And": 12, "le": 12, "ge": 12, "As": 12, "demonstr": 12, "introduc": 12, "condit": 12, "3": 12, "000067": 12, "gamma": 12, "14": 12, "query_simul": 12, "queryablegromet": 12, "chime_sir": 12, "compare_against_chime_fn": 12, "q_sim": 12, "q_gromet": 12, "foral": 12, "call": 12, "chime_sir_while_loop": 12, "auto": 12, "formul": 12, "epoch": 12, "three": 12, "tripl": 12, "modifi": 12, "variant": 12, "entir": 12, "akin": 12, "read": 12, "note": 12, "more": 12, "found": 12, "test_parameter_synthesi": 12, "prepar": 12, "gromet_file_1": 12, "n_p": 12, "n_dai": 12, "dai": 12, "gromet_org": 12, "gromet_file_2": 12, "modif": 12, "40": 12, "gromet_sub": 12, "ps_b1_b2_b3": 12, "synthesize_paramet": 12, "ps_bc": 12, "ps_eq": 12, "b3": 12, "run_chime_sir_bl": 12, "queryablebilay": 12, "compare_against_chime_bilay": 12, "bilayer_fil": 12, "from_fil": 12, "q_bilay": 12}, "objects": {"": [[1, 0, 0, "-", "funman"]], "funman": [[2, 0, 0, "-", "api"], [1, 0, 0, "-", "constants"], [1, 0, 0, "-", "funman"], [3, 0, 0, "-", "model"], [4, 0, 0, "-", "representation"], [5, 0, 0, "-", "scenario"], [6, 0, 0, "-", "search"], [7, 0, 0, "-", "translate"], [8, 0, 0, "-", "utils"]], "funman.api": [[2, 0, 0, "-", "api"], [2, 0, 0, "-", "client"], [2, 0, 0, "-", "server"]], "funman.api.api": [[2, 1, 1, "", "read_root"], [2, 1, 1, "", "solve_consistency"], [2, 1, 1, "", "solve_parameter_synthesis"], [2, 1, 1, "", "solve_simulation"]], "funman.api.client": [[2, 1, 1, "", "make_client"]], "funman.api.server": [[2, 2, 1, "", "Server"], [2, 2, 1, "", "ServerConfig"]], "funman.api.server.Server": [[2, 3, 1, "", "run_in_thread"]], "funman.funman": [[1, 4, 1, "", "FUNMANConfig"], [1, 2, 1, "", "Funman"]], "funman.funman.FUNMANConfig": [[1, 5, 1, "", "constraint_noise"], [1, 5, 1, "", "dreal_log_level"], [1, 5, 1, "", "dreal_precision"], [1, 6, 1, "", "import_dreal"], [1, 5, 1, "", "initial_state_tolerance"], [1, 5, 1, "", "num_initial_boxes"], [1, 5, 1, "", "num_steps"], [1, 5, 1, "", "number_of_processes"], [1, 5, 1, "", "queue_timeout"], [1, 5, 1, "", "save_smtlib"], [1, 5, 1, "", "solver"], [1, 5, 1, "", "step_size"], [1, 5, 1, "", "tolerance"], [1, 5, 1, "", "wait_action_timeout"], [1, 5, 1, "", "wait_timeout"]], "funman.funman.Funman": [[1, 3, 1, "", "solve"]], "funman.model": [[3, 0, 0, "-", "bilayer"], [3, 0, 0, "-", "decapode"], [3, 0, 0, "-", "encoded"], [3, 0, 0, "-", "gromet"], [3, 0, 0, "-", "model"], [3, 0, 0, "-", "query"], [3, 0, 0, "-", "simulator"]], "funman.model.bilayer": [[3, 4, 1, "", "BilayerDynamics"], [3, 4, 1, "", "BilayerEdge"], [3, 4, 1, "", "BilayerFluxNode"], [3, 4, 1, "", "BilayerGraph"], [3, 4, 1, "", "BilayerMeasurement"], [3, 4, 1, "", "BilayerMetadata"], [3, 4, 1, "", "BilayerModel"], [3, 4, 1, "", "BilayerNegativeEdge"], [3, 4, 1, "", "BilayerNode"], [3, 4, 1, "", "BilayerPositiveEdge"], [3, 4, 1, "", "BilayerStateNode"]], "funman.model.bilayer.BilayerDynamics": [[3, 3, 1, "", "to_dot"]], "funman.model.bilayer.BilayerEdge": [[3, 5, 1, "", "src"], [3, 5, 1, "", "tgt"], [3, 3, 1, "", "to_dot"]], "funman.model.bilayer.BilayerFluxNode": [[3, 5, 1, "", "index"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "parameter"]], "funman.model.bilayer.BilayerGraph": [[3, 5, 1, "", "json_graph"]], "funman.model.bilayer.BilayerMeasurement": [[3, 5, 1, "", "flux"], [3, 5, 1, "", "input_edges"], [3, 5, 1, "", "observable"], [3, 5, 1, "", "output_edges"], [3, 5, 1, "", "state"], [3, 3, 1, "", "to_dot"]], "funman.model.bilayer.BilayerMetadata": [[3, 5, 1, "", "initial_value"], [3, 5, 1, "", "lb"], [3, 5, 1, "", "ref"], [3, 5, 1, "", "type"], [3, 5, 1, "", "ub"]], "funman.model.bilayer.BilayerModel": [[3, 5, 1, "", "bilayer"], [3, 3, 1, "", "default_encoder"], [3, 5, 1, "", "identical_parameters"], [3, 5, 1, "", "measurements"]], "funman.model.bilayer.BilayerNegativeEdge": [[3, 5, 1, "", "src"], [3, 5, 1, "", "tgt"], [3, 3, 1, "", "to_dot"]], "funman.model.bilayer.BilayerNode": [[3, 5, 1, "", "index"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "parameter"], [3, 3, 1, "", "to_dot"]], "funman.model.bilayer.BilayerPositiveEdge": [[3, 5, 1, "", "src"], [3, 5, 1, "", "tgt"]], "funman.model.bilayer.BilayerStateNode": [[3, 5, 1, "", "index"], [3, 5, 1, "", "metadata"], [3, 5, 1, "", "parameter"]], "funman.model.decapode": [[3, 4, 1, "", "DecapodeDynamics"], [3, 4, 1, "", "DecapodeModel"]], "funman.model.decapode.DecapodeDynamics": [[3, 5, 1, "", "json_graph"]], "funman.model.decapode.DecapodeModel": [[3, 5, 1, "", "decapode"], [3, 3, 1, "", "default_encoder"]], "funman.model.encoded": [[3, 4, 1, "", "EncodedModel"]], "funman.model.encoded.EncodedModel": [[3, 3, 1, "", "default_encoder"]], "funman.model.gromet": [[3, 4, 1, "", "GrometModel"]], "funman.model.gromet.GrometModel": [[3, 3, 1, "", "from_gromet_file"], [3, 5, 1, "", "init_values"], [3, 5, 1, "", "parameter_bounds"], [3, 5, 1, "", "structural_parameter_bounds"]], "funman.model.model": [[3, 4, 1, "", "Model"]], "funman.model.model.Model": [[3, 3, 1, "", "default_encoder"], [3, 5, 1, "", "init_values"], [3, 5, 1, "", "parameter_bounds"], [3, 5, 1, "", "structural_parameter_bounds"], [3, 3, 1, "", "variables"]], "funman.model.query": [[3, 4, 1, "", "Query"], [3, 4, 1, "", "QueryAnd"], [3, 4, 1, "", "QueryEncoded"], [3, 4, 1, "", "QueryEquals"], [3, 4, 1, "", "QueryFunction"], [3, 4, 1, "", "QueryGE"], [3, 4, 1, "", "QueryLE"], [3, 4, 1, "", "QueryTrue"]], "funman.model.query.QueryAnd": [[3, 5, 1, "", "queries"]], "funman.model.query.QueryEquals": [[3, 5, 1, "", "at_end"], [3, 5, 1, "", "value"], [3, 5, 1, "", "variable"]], "funman.model.query.QueryFunction": [[3, 5, 1, "", "function"]], "funman.model.query.QueryGE": [[3, 5, 1, "", "at_end"], [3, 5, 1, "", "lb"], [3, 5, 1, "", "variable"]], "funman.model.query.QueryLE": [[3, 5, 1, "", "at_end"], [3, 5, 1, "", "ub"], [3, 5, 1, "", "variable"]], "funman.model.simulator": [[3, 4, 1, "", "SimulatorModel"]], "funman.model.simulator.SimulatorModel": [[3, 3, 1, "", "default_encoder"], [3, 5, 1, "", "main_fn"]], "funman.representation": [[4, 0, 0, "-", "representation"]], "funman.representation.representation": [[4, 4, 1, "", "Box"], [4, 4, 1, "", "Interval"], [4, 4, 1, "", "Parameter"], [4, 4, 1, "", "ParameterSpace"], [4, 4, 1, "", "Point"]], "funman.representation.representation.Box": [[4, 5, 1, "", "bounds"], [4, 5, 1, "", "cached_width"], [4, 3, 1, "", "contains"], [4, 3, 1, "", "contains_point"], [4, 3, 1, "", "equal"], [4, 3, 1, "", "finite"], [4, 3, 1, "", "intersect"], [4, 3, 1, "", "intersects"], [4, 5, 1, "", "label"], [4, 3, 1, "", "project"], [4, 3, 1, "", "split"], [4, 5, 1, "", "type"], [4, 3, 1, "", "variance"], [4, 3, 1, "", "width"]], "funman.representation.representation.Interval": [[4, 5, 1, "", "cached_width"], [4, 3, 1, "", "contains"], [4, 3, 1, "", "contains_value"], [4, 3, 1, "", "disjoint"], [4, 3, 1, "", "finite"], [4, 3, 1, "", "intersection"], [4, 3, 1, "", "intersects"], [4, 5, 1, "", "lb"], [4, 3, 1, "", "meets"], [4, 3, 1, "", "midpoint"], [4, 3, 1, "", "subtract"], [4, 5, 1, "", "ub"], [4, 3, 1, "", "union"], [4, 3, 1, "", "width"]], "funman.representation.representation.Parameter": [[4, 5, 1, "", "lb"], [4, 5, 1, "", "name"], [4, 3, 1, "", "symbol"], [4, 3, 1, "", "timed_copy"], [4, 5, 1, "", "ub"]], "funman.representation.representation.ParameterSpace": [[4, 3, 1, "", "append_result"], [4, 3, 1, "", "compare"], [4, 3, 1, "", "consistent"], [4, 3, 1, "", "construct_all_equal"], [4, 3, 1, "", "decode_labeled_object"], [4, 5, 1, "", "false_boxes"], [4, 5, 1, "", "false_points"], [4, 3, 1, "", "intersect"], [4, 3, 1, "", "plot"], [4, 3, 1, "", "project"], [4, 3, 1, "", "symmetric_difference"], [4, 5, 1, "", "true_boxes"], [4, 5, 1, "", "true_points"]], "funman.representation.representation.Point": [[4, 3, 1, "", "from_dict"], [4, 5, 1, "", "label"], [4, 5, 1, "", "type"], [4, 5, 1, "", "values"]], "funman.scenario": [[5, 0, 0, "-", "consistency"], [5, 0, 0, "-", "parameter_synthesis"], [5, 0, 0, "-", "scenario"], [5, 0, 0, "-", "simulation"]], "funman.scenario.consistency": [[5, 4, 1, "", "ConsistencyScenario"], [5, 4, 1, "", "ConsistencyScenarioResult"]], "funman.scenario.consistency.ConsistencyScenario": [[5, 5, 1, "", "model"], [5, 5, 1, "", "query"], [5, 3, 1, "", "solve"]], "funman.scenario.consistency.ConsistencyScenarioResult": [[5, 5, 1, "", "consistent"], [5, 3, 1, "", "dataframe"], [5, 3, 1, "", "plot"], [5, 5, 1, "", "scenario"]], "funman.scenario.parameter_synthesis": [[5, 4, 1, "", "ParameterSynthesisScenario"], [5, 4, 1, "", "ParameterSynthesisScenarioResult"]], "funman.scenario.parameter_synthesis.ParameterSynthesisScenario": [[5, 5, 1, "", "model"], [5, 5, 1, "", "parameters"], [5, 5, 1, "", "query"], [5, 3, 1, "", "solve"]], "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult": [[5, 5, 1, "", "parameter_space"], [5, 3, 1, "", "plot"], [5, 5, 1, "", "scenario"], [5, 3, 1, "", "true_point_timeseries"]], "funman.scenario.scenario": [[5, 4, 1, "", "AnalysisScenario"], [5, 2, 1, "", "AnalysisScenarioResult"], [5, 4, 1, "", "AnalysisScenarioResultException"]], "funman.scenario.scenario.AnalysisScenario": [[5, 3, 1, "", "solve"]], "funman.scenario.scenario.AnalysisScenarioResult": [[5, 3, 1, "", "plot"]], "funman.scenario.scenario.AnalysisScenarioResultException": [[5, 5, 1, "", "exception"], [5, 3, 1, "", "plot"]], "funman.scenario.simulation": [[5, 4, 1, "", "SimulationScenario"], [5, 4, 1, "", "SimulationScenarioResult"]], "funman.scenario.simulation.SimulationScenario": [[5, 5, 1, "", "model"], [5, 5, 1, "", "query"], [5, 3, 1, "", "solve"]], "funman.scenario.simulation.SimulationScenarioResult": [[5, 3, 1, "", "plot"], [5, 5, 1, "", "query_satisfied"], [5, 5, 1, "", "results"], [5, 5, 1, "", "scenario"]], "funman.search": [[6, 0, 0, "-", "box_search"], [6, 0, 0, "-", "search"], [6, 0, 0, "-", "smt_check"]], "funman.search.box_search": [[6, 2, 1, "", "BoxSearch"], [6, 4, 1, "", "BoxSearchEpisode"], [6, 4, 1, "", "BoxSearchEpisodeMP"]], "funman.search.box_search.BoxSearch": [[6, 3, 1, "", "search"], [6, 3, 1, "", "store_smtlib"]], "funman.search.box_search.BoxSearchEpisode": [[6, 5, 1, "", "statistics"]], "funman.search.box_search.BoxSearchEpisodeMP": [[6, 5, 1, "", "statistics"]], "funman.search.search": [[6, 2, 1, "", "Search"], [6, 4, 1, "", "SearchEpisode"], [6, 4, 1, "", "SearchStaticsMP"], [6, 4, 1, "", "SearchStatistics"]], "funman.search.search.Search": [[6, 3, 1, "", "search"]], "funman.search.search.SearchEpisode": [[6, 5, 1, "", "config"], [6, 3, 1, "", "num_parameters"], [6, 5, 1, "", "problem"], [6, 5, 1, "", "statistics"]], "funman.search.smt_check": [[6, 2, 1, "", "SMTCheck"]], "funman.search.smt_check.SMTCheck": [[6, 3, 1, "", "expand"], [6, 3, 1, "", "search"], [6, 3, 1, "", "store_smtlib"]], "funman.translate": [[7, 0, 0, "-", "bilayer"], [7, 0, 0, "-", "decapode"], [7, 0, 0, "-", "encoded"], [7, 0, 0, "-", "gromet"], [7, 0, 0, "-", "translate"]], "funman.translate.bilayer": [[7, 4, 1, "", "BilayerEncoder"]], "funman.translate.bilayer.BilayerEncoder": [[7, 3, 1, "", "encode_model"], [7, 3, 1, "", "encode_model_timed"], [7, 3, 1, "", "get_structural_configurations"], [7, 3, 1, "", "get_timepoints"], [7, 3, 1, "", "parameter_values"], [7, 3, 1, "", "symbol_values"]], "funman.translate.decapode": [[7, 4, 1, "", "DecapodeEncoder"]], "funman.translate.decapode.DecapodeEncoder": [[7, 5, 1, "", "config"], [7, 3, 1, "", "encode_model"]], "funman.translate.encoded": [[7, 4, 1, "", "EncodedEncoder"]], "funman.translate.encoded.EncodedEncoder": [[7, 5, 1, "", "config"], [7, 3, 1, "", "encode_model"]], "funman.translate.gromet": [[7, 4, 1, "", "GrometEncoder"], [7, 2, 1, "", "GrometEncodingOptions"]], "funman.translate.gromet.GrometEncoder": [[7, 5, 1, "", "config"], [7, 3, 1, "", "encode_model"]], "funman.translate.translate": [[7, 4, 1, "", "DefaultEncoder"], [7, 4, 1, "", "Encoder"], [7, 4, 1, "", "Encoding"], [7, 2, 1, "", "EncodingOptions"]], "funman.translate.translate.DefaultEncoder": [[7, 5, 1, "", "config"]], "funman.translate.translate.Encoder": [[7, 3, 1, "", "box_to_smt"], [7, 5, 1, "", "config"], [7, 3, 1, "", "encode_model"], [7, 3, 1, "", "encode_query"], [7, 3, 1, "", "interval_to_smt"], [7, 3, 1, "", "point_to_smt"], [7, 3, 1, "", "symbol_timeseries"]], "funman.utils": [[8, 0, 0, "-", "handlers"], [8, 0, 0, "-", "math_utils"], [8, 0, 0, "-", "smtlib_utils"]], "funman.utils.handlers": [[8, 2, 1, "", "NoopResultHandler"], [8, 2, 1, "", "ResultCombinedHandler"], [8, 2, 1, "", "ResultHandler"], [8, 2, 1, "", "WaitAction"]], "funman.utils.handlers.NoopResultHandler": [[8, 3, 1, "", "close"], [8, 3, 1, "", "open"], [8, 3, 1, "", "process"]], "funman.utils.handlers.ResultCombinedHandler": [[8, 3, 1, "", "close"], [8, 3, 1, "", "open"], [8, 3, 1, "", "process"]], "funman.utils.handlers.ResultHandler": [[8, 3, 1, "", "close"], [8, 3, 1, "", "open"], [8, 3, 1, "", "process"]], "funman.utils.handlers.WaitAction": [[8, 3, 1, "", "run"]], "funman.utils.math_utils": [[8, 1, 1, "", "gt"], [8, 1, 1, "", "gte"], [8, 1, 1, "", "lt"], [8, 1, 1, "", "lte"], [8, 1, 1, "", "minus"], [8, 1, 1, "", "plus"]], "funman.utils.smtlib_utils": [[8, 2, 1, "", "FUNMANSmtDagPrinter"], [8, 2, 1, "", "FUNMANSmtLibScript"], [8, 2, 1, "", "FUNMANSmtPrinter"], [8, 1, 1, "", "model_to_dict"], [8, 1, 1, "", "smtlibscript_from_formula"], [8, 1, 1, "", "smtlibscript_from_formula_list"]], "funman.utils.smtlib_utils.FUNMANSmtDagPrinter": [[8, 3, 1, "", "walk_real_constant"]], "funman.utils.smtlib_utils.FUNMANSmtLibScript": [[8, 3, 1, "", "serialize"]], "funman.utils.smtlib_utils.FUNMANSmtPrinter": [[8, 3, 1, "", "walk_real_constant"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:pydantic_model", "5": "py:pydantic_field", "6": "py:pydantic_validator"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "pydantic_model", "Python model"], "5": ["py", "pydantic_field", "Python field"], "6": ["py", "pydantic_validator", "Python validator"]}, "titleterms": {"class": 0, "diagram": [0, 10], "funman": [1, 2, 3, 4, 5, 6, 7, 8, 9], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 10], "subpackag": 1, "submodul": [1, 2, 3, 4, 5, 6, 7, 8], "constant": [1, 12], "modul": [1, 2, 3, 4, 5, 6, 7, 8], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9], "api": 2, "client": 2, "server": 2, "model": [3, 11, 12], "bilay": [3, 7, 12], "decapod": [3, 7, 11], "encod": [3, 7], "gromet": [3, 7], "queri": 3, "simul": [3, 5, 12], "represent": 4, "scenario": 5, "consist": [5, 11], "parameter_synthesi": 5, "search": 6, "box_search": 6, "smt_check": 6, "translat": [7, 12], "util": 8, "handler": 8, "math_util": 8, "smtlib_util": 8, "welcom": 9, "": 9, "document": 9, "indic": 9, "tabl": 9, "space": 11, "weather": 11, "us": [11, 12], "case": [11, 12], "check": 11, "project": 11, "find": 11, "output": 11, "given": 11, "input": 11, "regress": 11, "sensit": 11, "analysi": 11, "captur": 11, "relationship": 11, "between": 11, "behavior": 11, "epidemiologi": 12, "compar": 12, "paramet": 12, "synthesi": 12, "futur": 12, "fn": 12, "time": 12, "depend": 12, "beta": 12, "bi": 12, "layer": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Class Diagram": [[0, "class-diagram"]], "funman package": [[1, "funman-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "funman.constants module": [[1, "funman-constants-module"]], "funman.funman module": [[1, "funman-funman-module"]], "Module contents": [[1, "module-funman"], [2, "module-funman.api"], [3, "module-funman.model"], [4, "module-funman.representation"], [5, "module-funman.scenario"], [6, "module-funman.search"], [7, "module-funman.translate"], [8, "module-funman.utils"]], "funman.api package": [[2, "funman-api-package"]], "funman.api.api module": [[2, "funman-api-api-module"]], "funman.api.client module": [[2, "funman-api-client-module"]], "funman.api.server module": [[2, "funman-api-server-module"]], "funman.model package": [[3, "funman-model-package"]], "funman.model.bilayer module": [[3, "funman-model-bilayer-module"]], "funman.model.decapode module": [[3, "funman-model-decapode-module"]], "funman.model.encoded module": [[3, "funman-model-encoded-module"]], "funman.model.gromet module": [[3, "funman-model-gromet-module"]], "funman.model.model module": [[3, "funman-model-model-module"]], "funman.model.query module": [[3, "funman-model-query-module"]], "funman.model.simulator module": [[3, "funman-model-simulator-module"]], "funman.representation package": [[4, "funman-representation-package"]], "funman.representation.representation module": [[4, "funman-representation-representation-module"]], "funman.scenario package": [[5, "funman-scenario-package"]], "funman.scenario.consistency module": [[5, "funman-scenario-consistency-module"]], "funman.scenario.parameter_synthesis module": [[5, "funman-scenario-parameter-synthesis-module"]], "funman.scenario.scenario module": [[5, "funman-scenario-scenario-module"]], "funman.scenario.simulation module": [[5, "funman-scenario-simulation-module"]], "funman.search package": [[6, "funman-search-package"]], "funman.search.box_search module": [[6, "funman-search-box-search-module"]], "funman.search.search module": [[6, "funman-search-search-module"]], "funman.search.smt_check module": [[6, "funman-search-smt-check-module"]], "funman.translate package": [[7, "funman-translate-package"]], "funman.translate.bilayer module": [[7, "funman-translate-bilayer-module"]], "funman.translate.decapode module": [[7, "funman-translate-decapode-module"]], "funman.translate.encoded module": [[7, "funman-translate-encoded-module"]], "funman.translate.gromet module": [[7, "funman-translate-gromet-module"]], "funman.translate.translate module": [[7, "funman-translate-translate-module"]], "funman.utils package": [[8, "funman-utils-package"]], "funman.utils.handlers module": [[8, "funman-utils-handlers-module"]], "funman.utils.math_utils module": [[8, "funman-utils-math-utils-module"]], "funman.utils.smtlib_utils module": [[8, "funman-utils-smtlib-utils-module"]], "Welcome to funman\u2019s documentation!": [[9, "welcome-to-funman-s-documentation"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "Package Diagram": [[10, "package-diagram"]], "Space Weather Use Cases": [[11, "space-weather-use-cases"]], "Check Consistency of DECAPODE Model:": [[11, "check-consistency-of-decapode-model"]], "Projection (find outputs for given input) of DECAPODE Model:": [[11, "projection-find-outputs-for-given-input-of-decapode-model"]], "Regression (find inputs for given output) of DECAPODE Model:": [[11, "regression-find-inputs-for-given-output-of-decapode-model"]], "Sensitivity Analysis (capture the relationship between input and output behavior) of DECAPODE Model:": [[11, "sensitivity-analysis-capture-the-relationship-between-input-and-output-behavior-of-decapode-model"]], "Epidemiology Use Cases": [[12, "epidemiology-use-cases"]], "Compare Bilayer Model to Simulator:": [[12, "compare-bilayer-model-to-simulator"]], "Parameter Synthesis": [[12, "parameter-synthesis"]], "Future Cases": [[12, "future-cases"]], "Compare Translated FN to Simulator:": [[12, "compare-translated-fn-to-simulator"]], "Compare Constant and Time-dependent Betas:": [[12, "compare-constant-and-time-dependent-betas"]], "Compare Bi-Layer Model to Bi-Layer Simulator:": [[12, "compare-bi-layer-model-to-bi-layer-simulator"]]}, "indexentries": {"funman (class in funman.funman)": [[1, "funman.funman.Funman"]], "constraint_noise (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.constraint_noise"]], "dreal_log_level (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.dreal_log_level"]], "dreal_precision (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.dreal_precision"]], "funman": [[1, "module-funman"]], "funman.constants": [[1, "module-funman.constants"]], "funman.funman": [[1, "module-funman.funman"]], "import_dreal() (funman.funman.funmanconfig class method)": [[1, "funman.funman.FUNMANConfig.import_dreal"]], "initial_state_tolerance (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.initial_state_tolerance"]], "module": [[1, "module-funman"], [1, "module-funman.constants"], [1, "module-funman.funman"], [2, "module-funman.api"], [2, "module-funman.api.api"], [2, "module-funman.api.client"], [2, "module-funman.api.server"], [3, "module-funman.model"], [3, "module-funman.model.bilayer"], [3, "module-funman.model.decapode"], [3, "module-funman.model.encoded"], [3, "module-funman.model.gromet"], [3, "module-funman.model.model"], [3, "module-funman.model.query"], [3, "module-funman.model.simulator"], [4, "module-funman.representation"], [4, "module-funman.representation.representation"], [5, "module-funman.scenario"], [5, "module-funman.scenario.consistency"], [5, "module-funman.scenario.parameter_synthesis"], [5, "module-funman.scenario.scenario"], [5, "module-funman.scenario.simulation"], [6, "module-funman.search"], [6, "module-funman.search.box_search"], [6, "module-funman.search.search"], [6, "module-funman.search.smt_check"], [7, "module-funman.translate"], [7, "module-funman.translate.bilayer"], [7, "module-funman.translate.decapode"], [7, "module-funman.translate.encoded"], [7, "module-funman.translate.gromet"], [7, "module-funman.translate.translate"], [8, "module-funman.utils"], [8, "module-funman.utils.handlers"], [8, "module-funman.utils.math_utils"], [8, "module-funman.utils.smtlib_utils"]], "num_initial_boxes (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.num_initial_boxes"]], "num_steps (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.num_steps"]], "number_of_processes (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.number_of_processes"]], "queue_timeout (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.queue_timeout"]], "save_smtlib (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.save_smtlib"]], "solve() (funman.funman.funman method)": [[1, "funman.funman.Funman.solve"]], "solver (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.solver"]], "step_size (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.step_size"]], "tolerance (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.tolerance"]], "wait_action_timeout (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.wait_action_timeout"]], "wait_timeout (funman.funman.funmanconfig attribute)": [[1, "funman.funman.FUNMANConfig.wait_timeout"]], "server (class in funman.api.server)": [[2, "funman.api.server.Server"]], "serverconfig (class in funman.api.server)": [[2, "funman.api.server.ServerConfig"]], "funman.api": [[2, "module-funman.api"]], "funman.api.api": [[2, "module-funman.api.api"]], "funman.api.client": [[2, "module-funman.api.client"]], "funman.api.server": [[2, "module-funman.api.server"]], "make_client() (in module funman.api.client)": [[2, "funman.api.client.make_client"]], "read_root() (in module funman.api.api)": [[2, "funman.api.api.read_root"]], "run_in_thread() (funman.api.server.server method)": [[2, "funman.api.server.Server.run_in_thread"]], "solve_consistency() (in module funman.api.api)": [[2, "funman.api.api.solve_consistency"]], "solve_parameter_synthesis() (in module funman.api.api)": [[2, "funman.api.api.solve_parameter_synthesis"]], "solve_simulation() (in module funman.api.api)": [[2, "funman.api.api.solve_simulation"]], "at_end (funman.model.query.queryequals attribute)": [[3, "funman.model.query.QueryEquals.at_end"]], "at_end (funman.model.query.queryge attribute)": [[3, "funman.model.query.QueryGE.at_end"]], "at_end (funman.model.query.queryle attribute)": [[3, "funman.model.query.QueryLE.at_end"]], "bilayer (funman.model.bilayer.bilayermodel attribute)": [[3, "funman.model.bilayer.BilayerModel.bilayer"]], "decapode (funman.model.decapode.decapodemodel attribute)": [[3, "funman.model.decapode.DecapodeModel.decapode"]], "default_encoder() (funman.model.bilayer.bilayermodel method)": [[3, "funman.model.bilayer.BilayerModel.default_encoder"]], "default_encoder() (funman.model.decapode.decapodemodel method)": [[3, "funman.model.decapode.DecapodeModel.default_encoder"]], "default_encoder() (funman.model.encoded.encodedmodel method)": [[3, "funman.model.encoded.EncodedModel.default_encoder"]], "default_encoder() (funman.model.model.model method)": [[3, "funman.model.model.Model.default_encoder"]], "default_encoder() (funman.model.simulator.simulatormodel method)": [[3, "funman.model.simulator.SimulatorModel.default_encoder"]], "flux (funman.model.bilayer.bilayermeasurement attribute)": [[3, "funman.model.bilayer.BilayerMeasurement.flux"]], "from_gromet_file() (funman.model.gromet.grometmodel static method)": [[3, "funman.model.gromet.GrometModel.from_gromet_file"]], "function (funman.model.query.queryfunction attribute)": [[3, "funman.model.query.QueryFunction.function"]], "funman.model": [[3, "module-funman.model"]], "funman.model.bilayer": [[3, "module-funman.model.bilayer"]], "funman.model.decapode": [[3, "module-funman.model.decapode"]], "funman.model.encoded": [[3, "module-funman.model.encoded"]], "funman.model.gromet": [[3, "module-funman.model.gromet"]], "funman.model.model": [[3, "module-funman.model.model"]], "funman.model.query": [[3, "module-funman.model.query"]], "funman.model.simulator": [[3, "module-funman.model.simulator"]], "identical_parameters (funman.model.bilayer.bilayermodel attribute)": [[3, "funman.model.bilayer.BilayerModel.identical_parameters"]], "index (funman.model.bilayer.bilayerfluxnode attribute)": [[3, "funman.model.bilayer.BilayerFluxNode.index"]], "index (funman.model.bilayer.bilayernode attribute)": [[3, "funman.model.bilayer.BilayerNode.index"]], "index (funman.model.bilayer.bilayerstatenode attribute)": [[3, "funman.model.bilayer.BilayerStateNode.index"]], "init_values (funman.model.gromet.grometmodel attribute)": [[3, "funman.model.gromet.GrometModel.init_values"]], "init_values (funman.model.model.model attribute)": [[3, "funman.model.model.Model.init_values"]], "initial_value (funman.model.bilayer.bilayermetadata attribute)": [[3, "funman.model.bilayer.BilayerMetadata.initial_value"]], "input_edges (funman.model.bilayer.bilayermeasurement attribute)": [[3, "funman.model.bilayer.BilayerMeasurement.input_edges"]], "json_graph (funman.model.bilayer.bilayergraph attribute)": [[3, "funman.model.bilayer.BilayerGraph.json_graph"]], "json_graph (funman.model.decapode.decapodedynamics attribute)": [[3, "funman.model.decapode.DecapodeDynamics.json_graph"]], "lb (funman.model.bilayer.bilayermetadata attribute)": [[3, "funman.model.bilayer.BilayerMetadata.lb"]], "lb (funman.model.query.queryge attribute)": [[3, "funman.model.query.QueryGE.lb"]], "main_fn (funman.model.simulator.simulatormodel attribute)": [[3, "funman.model.simulator.SimulatorModel.main_fn"]], "measurements (funman.model.bilayer.bilayermodel attribute)": [[3, "funman.model.bilayer.BilayerModel.measurements"]], "metadata (funman.model.bilayer.bilayerfluxnode attribute)": [[3, "funman.model.bilayer.BilayerFluxNode.metadata"]], "metadata (funman.model.bilayer.bilayernode attribute)": [[3, "funman.model.bilayer.BilayerNode.metadata"]], "metadata (funman.model.bilayer.bilayerstatenode attribute)": [[3, "funman.model.bilayer.BilayerStateNode.metadata"]], "observable (funman.model.bilayer.bilayermeasurement attribute)": [[3, "funman.model.bilayer.BilayerMeasurement.observable"]], "output_edges (funman.model.bilayer.bilayermeasurement attribute)": [[3, "funman.model.bilayer.BilayerMeasurement.output_edges"]], "parameter (funman.model.bilayer.bilayerfluxnode attribute)": [[3, "funman.model.bilayer.BilayerFluxNode.parameter"]], "parameter (funman.model.bilayer.bilayernode attribute)": [[3, "funman.model.bilayer.BilayerNode.parameter"]], "parameter (funman.model.bilayer.bilayerstatenode attribute)": [[3, "funman.model.bilayer.BilayerStateNode.parameter"]], "parameter_bounds (funman.model.gromet.grometmodel attribute)": [[3, "funman.model.gromet.GrometModel.parameter_bounds"]], "parameter_bounds (funman.model.model.model attribute)": [[3, "funman.model.model.Model.parameter_bounds"]], "queries (funman.model.query.queryand attribute)": [[3, "funman.model.query.QueryAnd.queries"]], "ref (funman.model.bilayer.bilayermetadata attribute)": [[3, "funman.model.bilayer.BilayerMetadata.ref"]], "src (funman.model.bilayer.bilayeredge attribute)": [[3, "funman.model.bilayer.BilayerEdge.src"]], "src (funman.model.bilayer.bilayernegativeedge attribute)": [[3, "funman.model.bilayer.BilayerNegativeEdge.src"]], "src (funman.model.bilayer.bilayerpositiveedge attribute)": [[3, "funman.model.bilayer.BilayerPositiveEdge.src"]], "state (funman.model.bilayer.bilayermeasurement attribute)": [[3, "funman.model.bilayer.BilayerMeasurement.state"]], "structural_parameter_bounds (funman.model.gromet.grometmodel attribute)": [[3, "funman.model.gromet.GrometModel.structural_parameter_bounds"]], "structural_parameter_bounds (funman.model.model.model attribute)": [[3, "funman.model.model.Model.structural_parameter_bounds"]], "tgt (funman.model.bilayer.bilayeredge attribute)": [[3, "funman.model.bilayer.BilayerEdge.tgt"]], "tgt (funman.model.bilayer.bilayernegativeedge attribute)": [[3, "funman.model.bilayer.BilayerNegativeEdge.tgt"]], "tgt (funman.model.bilayer.bilayerpositiveedge attribute)": [[3, "funman.model.bilayer.BilayerPositiveEdge.tgt"]], "to_dot() (funman.model.bilayer.bilayerdynamics method)": [[3, "funman.model.bilayer.BilayerDynamics.to_dot"]], "to_dot() (funman.model.bilayer.bilayeredge method)": [[3, "funman.model.bilayer.BilayerEdge.to_dot"]], "to_dot() (funman.model.bilayer.bilayermeasurement method)": [[3, "funman.model.bilayer.BilayerMeasurement.to_dot"]], "to_dot() (funman.model.bilayer.bilayernegativeedge method)": [[3, "funman.model.bilayer.BilayerNegativeEdge.to_dot"]], "to_dot() (funman.model.bilayer.bilayernode method)": [[3, "funman.model.bilayer.BilayerNode.to_dot"]], "type (funman.model.bilayer.bilayermetadata attribute)": [[3, "funman.model.bilayer.BilayerMetadata.type"]], "ub (funman.model.bilayer.bilayermetadata attribute)": [[3, "funman.model.bilayer.BilayerMetadata.ub"]], "ub (funman.model.query.queryle attribute)": [[3, "funman.model.query.QueryLE.ub"]], "value (funman.model.query.queryequals attribute)": [[3, "funman.model.query.QueryEquals.value"]], "variable (funman.model.query.queryequals attribute)": [[3, "funman.model.query.QueryEquals.variable"]], "variable (funman.model.query.queryge attribute)": [[3, "funman.model.query.QueryGE.variable"]], "variable (funman.model.query.queryle attribute)": [[3, "funman.model.query.QueryLE.variable"]], "variables() (funman.model.model.model method)": [[3, "funman.model.model.Model.variables"]], "append_result() (funman.representation.representation.parameterspace method)": [[4, "funman.representation.representation.ParameterSpace.append_result"]], "bounds (funman.representation.representation.box attribute)": [[4, "funman.representation.representation.Box.bounds"]], "cached_width (funman.representation.representation.box attribute)": [[4, "funman.representation.representation.Box.cached_width"]], "cached_width (funman.representation.representation.interval attribute)": [[4, "funman.representation.representation.Interval.cached_width"]], "compare() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.compare"]], "consistent() (funman.representation.representation.parameterspace method)": [[4, "funman.representation.representation.ParameterSpace.consistent"]], "construct_all_equal() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.construct_all_equal"]], "contains() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.contains"]], "contains() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.contains"]], "contains_point() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.contains_point"]], "contains_value() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.contains_value"]], "decode_labeled_object() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.decode_labeled_object"]], "disjoint() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.disjoint"]], "equal() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.equal"]], "false_boxes (funman.representation.representation.parameterspace attribute)": [[4, "funman.representation.representation.ParameterSpace.false_boxes"]], "false_points (funman.representation.representation.parameterspace attribute)": [[4, "funman.representation.representation.ParameterSpace.false_points"]], "finite() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.finite"]], "finite() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.finite"]], "from_dict() (funman.representation.representation.point static method)": [[4, "funman.representation.representation.Point.from_dict"]], "funman.representation": [[4, "module-funman.representation"]], "funman.representation.representation": [[4, "module-funman.representation.representation"]], "intersect() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.intersect"]], "intersect() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.intersect"]], "intersection() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.intersection"]], "intersects() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.intersects"]], "intersects() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.intersects"]], "label (funman.representation.representation.box attribute)": [[4, "funman.representation.representation.Box.label"]], "label (funman.representation.representation.point attribute)": [[4, "funman.representation.representation.Point.label"]], "lb (funman.representation.representation.interval attribute)": [[4, "funman.representation.representation.Interval.lb"]], "lb (funman.representation.representation.parameter attribute)": [[4, "funman.representation.representation.Parameter.lb"]], "meets() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.meets"]], "midpoint() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.midpoint"]], "name (funman.representation.representation.parameter attribute)": [[4, "funman.representation.representation.Parameter.name"]], "plot() (funman.representation.representation.parameterspace method)": [[4, "funman.representation.representation.ParameterSpace.plot"]], "project() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.project"]], "project() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.project"]], "split() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.split"]], "subtract() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.subtract"]], "symbol() (funman.representation.representation.parameter method)": [[4, "funman.representation.representation.Parameter.symbol"]], "symmetric_difference() (funman.representation.representation.parameterspace static method)": [[4, "funman.representation.representation.ParameterSpace.symmetric_difference"]], "timed_copy() (funman.representation.representation.parameter method)": [[4, "funman.representation.representation.Parameter.timed_copy"]], "true_boxes (funman.representation.representation.parameterspace attribute)": [[4, "funman.representation.representation.ParameterSpace.true_boxes"]], "true_points (funman.representation.representation.parameterspace attribute)": [[4, "funman.representation.representation.ParameterSpace.true_points"]], "type (funman.representation.representation.box attribute)": [[4, "funman.representation.representation.Box.type"]], "type (funman.representation.representation.point attribute)": [[4, "funman.representation.representation.Point.type"]], "ub (funman.representation.representation.interval attribute)": [[4, "funman.representation.representation.Interval.ub"]], "ub (funman.representation.representation.parameter attribute)": [[4, "funman.representation.representation.Parameter.ub"]], "union() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.union"]], "values (funman.representation.representation.point attribute)": [[4, "funman.representation.representation.Point.values"]], "variance() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.variance"]], "width() (funman.representation.representation.box method)": [[4, "funman.representation.representation.Box.width"]], "width() (funman.representation.representation.interval method)": [[4, "funman.representation.representation.Interval.width"]], "analysisscenarioresult (class in funman.scenario.scenario)": [[5, "funman.scenario.scenario.AnalysisScenarioResult"]], "consistent (funman.scenario.consistency.consistencyscenarioresult attribute)": [[5, "funman.scenario.consistency.ConsistencyScenarioResult.consistent"]], "dataframe() (funman.scenario.consistency.consistencyscenarioresult method)": [[5, "funman.scenario.consistency.ConsistencyScenarioResult.dataframe"]], "exception (funman.scenario.scenario.analysisscenarioresultexception attribute)": [[5, "funman.scenario.scenario.AnalysisScenarioResultException.exception"]], "funman.scenario": [[5, "module-funman.scenario"]], "funman.scenario.consistency": [[5, "module-funman.scenario.consistency"]], "funman.scenario.parameter_synthesis": [[5, "module-funman.scenario.parameter_synthesis"]], "funman.scenario.scenario": [[5, "module-funman.scenario.scenario"]], "funman.scenario.simulation": [[5, "module-funman.scenario.simulation"]], "model (funman.scenario.consistency.consistencyscenario attribute)": [[5, "funman.scenario.consistency.ConsistencyScenario.model"]], "model (funman.scenario.parameter_synthesis.parametersynthesisscenario attribute)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario.model"]], "model (funman.scenario.simulation.simulationscenario attribute)": [[5, "funman.scenario.simulation.SimulationScenario.model"]], "parameter_space (funman.scenario.parameter_synthesis.parametersynthesisscenarioresult attribute)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult.parameter_space"]], "parameters (funman.scenario.parameter_synthesis.parametersynthesisscenario attribute)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario.parameters"]], "plot() (funman.scenario.consistency.consistencyscenarioresult method)": [[5, "funman.scenario.consistency.ConsistencyScenarioResult.plot"]], "plot() (funman.scenario.parameter_synthesis.parametersynthesisscenarioresult method)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult.plot"]], "plot() (funman.scenario.scenario.analysisscenarioresult class method)": [[5, "funman.scenario.scenario.AnalysisScenarioResult.plot"]], "plot() (funman.scenario.scenario.analysisscenarioresultexception method)": [[5, "funman.scenario.scenario.AnalysisScenarioResultException.plot"]], "plot() (funman.scenario.simulation.simulationscenarioresult method)": [[5, "funman.scenario.simulation.SimulationScenarioResult.plot"]], "query (funman.scenario.consistency.consistencyscenario attribute)": [[5, "funman.scenario.consistency.ConsistencyScenario.query"]], "query (funman.scenario.parameter_synthesis.parametersynthesisscenario attribute)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario.query"]], "query (funman.scenario.simulation.simulationscenario attribute)": [[5, "funman.scenario.simulation.SimulationScenario.query"]], "query_satisfied (funman.scenario.simulation.simulationscenarioresult attribute)": [[5, "funman.scenario.simulation.SimulationScenarioResult.query_satisfied"]], "results (funman.scenario.simulation.simulationscenarioresult attribute)": [[5, "funman.scenario.simulation.SimulationScenarioResult.results"]], "scenario (funman.scenario.consistency.consistencyscenarioresult attribute)": [[5, "funman.scenario.consistency.ConsistencyScenarioResult.scenario"]], "scenario (funman.scenario.parameter_synthesis.parametersynthesisscenarioresult attribute)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult.scenario"]], "scenario (funman.scenario.simulation.simulationscenarioresult attribute)": [[5, "funman.scenario.simulation.SimulationScenarioResult.scenario"]], "solve() (funman.scenario.consistency.consistencyscenario method)": [[5, "funman.scenario.consistency.ConsistencyScenario.solve"]], "solve() (funman.scenario.parameter_synthesis.parametersynthesisscenario method)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario.solve"]], "solve() (funman.scenario.scenario.analysisscenario class method)": [[5, "funman.scenario.scenario.AnalysisScenario.solve"]], "solve() (funman.scenario.simulation.simulationscenario method)": [[5, "funman.scenario.simulation.SimulationScenario.solve"]], "true_point_timeseries() (funman.scenario.parameter_synthesis.parametersynthesisscenarioresult method)": [[5, "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult.true_point_timeseries"]], "boxsearch (class in funman.search.box_search)": [[6, "funman.search.box_search.BoxSearch"]], "smtcheck (class in funman.search.smt_check)": [[6, "funman.search.smt_check.SMTCheck"]], "search (class in funman.search.search)": [[6, "funman.search.search.Search"]], "config (funman.search.search.searchepisode attribute)": [[6, "funman.search.search.SearchEpisode.config"]], "expand() (funman.search.smt_check.smtcheck method)": [[6, "funman.search.smt_check.SMTCheck.expand"]], "funman.search": [[6, "module-funman.search"]], "funman.search.box_search": [[6, "module-funman.search.box_search"]], "funman.search.search": [[6, "module-funman.search.search"]], "funman.search.smt_check": [[6, "module-funman.search.smt_check"]], "num_parameters() (funman.search.search.searchepisode method)": [[6, "funman.search.search.SearchEpisode.num_parameters"]], "problem (funman.search.search.searchepisode attribute)": [[6, "funman.search.search.SearchEpisode.problem"]], "search() (funman.search.box_search.boxsearch method)": [[6, "funman.search.box_search.BoxSearch.search"]], "search() (funman.search.search.search method)": [[6, "funman.search.search.Search.search"]], "search() (funman.search.smt_check.smtcheck method)": [[6, "funman.search.smt_check.SMTCheck.search"]], "statistics (funman.search.box_search.boxsearchepisode attribute)": [[6, "funman.search.box_search.BoxSearchEpisode.statistics"]], "statistics (funman.search.box_search.boxsearchepisodemp attribute)": [[6, "funman.search.box_search.BoxSearchEpisodeMP.statistics"]], "statistics (funman.search.search.searchepisode attribute)": [[6, "funman.search.search.SearchEpisode.statistics"]], "store_smtlib() (funman.search.box_search.boxsearch method)": [[6, "funman.search.box_search.BoxSearch.store_smtlib"]], "store_smtlib() (funman.search.smt_check.smtcheck method)": [[6, "funman.search.smt_check.SMTCheck.store_smtlib"]], "encodingoptions (class in funman.translate.translate)": [[7, "funman.translate.translate.EncodingOptions"]], "grometencodingoptions (class in funman.translate.gromet)": [[7, "funman.translate.gromet.GrometEncodingOptions"]], "box_to_smt() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.box_to_smt"]], "config (funman.translate.decapode.decapodeencoder attribute)": [[7, "funman.translate.decapode.DecapodeEncoder.config"]], "config (funman.translate.encoded.encodedencoder attribute)": [[7, "funman.translate.encoded.EncodedEncoder.config"]], "config (funman.translate.gromet.grometencoder attribute)": [[7, "funman.translate.gromet.GrometEncoder.config"]], "config (funman.translate.translate.defaultencoder attribute)": [[7, "funman.translate.translate.DefaultEncoder.config"]], "config (funman.translate.translate.encoder attribute)": [[7, "funman.translate.translate.Encoder.config"]], "encode_model() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.encode_model"]], "encode_model() (funman.translate.decapode.decapodeencoder method)": [[7, "funman.translate.decapode.DecapodeEncoder.encode_model"]], "encode_model() (funman.translate.encoded.encodedencoder method)": [[7, "funman.translate.encoded.EncodedEncoder.encode_model"]], "encode_model() (funman.translate.gromet.grometencoder method)": [[7, "funman.translate.gromet.GrometEncoder.encode_model"]], "encode_model() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.encode_model"]], "encode_model_timed() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.encode_model_timed"]], "encode_query() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.encode_query"]], "funman.translate": [[7, "module-funman.translate"]], "funman.translate.bilayer": [[7, "module-funman.translate.bilayer"]], "funman.translate.decapode": [[7, "module-funman.translate.decapode"]], "funman.translate.encoded": [[7, "module-funman.translate.encoded"]], "funman.translate.gromet": [[7, "module-funman.translate.gromet"]], "funman.translate.translate": [[7, "module-funman.translate.translate"]], "get_structural_configurations() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.get_structural_configurations"]], "get_timepoints() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.get_timepoints"]], "interval_to_smt() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.interval_to_smt"]], "parameter_values() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.parameter_values"]], "point_to_smt() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.point_to_smt"]], "symbol_timeseries() (funman.translate.translate.encoder method)": [[7, "funman.translate.translate.Encoder.symbol_timeseries"]], "symbol_values() (funman.translate.bilayer.bilayerencoder method)": [[7, "funman.translate.bilayer.BilayerEncoder.symbol_values"]], "funmansmtdagprinter (class in funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.FUNMANSmtDagPrinter"]], "funmansmtlibscript (class in funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.FUNMANSmtLibScript"]], "funmansmtprinter (class in funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.FUNMANSmtPrinter"]], "noopresulthandler (class in funman.utils.handlers)": [[8, "funman.utils.handlers.NoopResultHandler"]], "resultcombinedhandler (class in funman.utils.handlers)": [[8, "funman.utils.handlers.ResultCombinedHandler"]], "resulthandler (class in funman.utils.handlers)": [[8, "funman.utils.handlers.ResultHandler"]], "waitaction (class in funman.utils.handlers)": [[8, "funman.utils.handlers.WaitAction"]], "close() (funman.utils.handlers.noopresulthandler method)": [[8, "funman.utils.handlers.NoopResultHandler.close"]], "close() (funman.utils.handlers.resultcombinedhandler method)": [[8, "funman.utils.handlers.ResultCombinedHandler.close"]], "close() (funman.utils.handlers.resulthandler method)": [[8, "funman.utils.handlers.ResultHandler.close"]], "funman.utils": [[8, "module-funman.utils"]], "funman.utils.handlers": [[8, "module-funman.utils.handlers"]], "funman.utils.math_utils": [[8, "module-funman.utils.math_utils"]], "funman.utils.smtlib_utils": [[8, "module-funman.utils.smtlib_utils"]], "gt() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.gt"]], "gte() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.gte"]], "lt() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.lt"]], "lte() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.lte"]], "minus() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.minus"]], "model_to_dict() (in module funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.model_to_dict"]], "open() (funman.utils.handlers.noopresulthandler method)": [[8, "funman.utils.handlers.NoopResultHandler.open"]], "open() (funman.utils.handlers.resultcombinedhandler method)": [[8, "funman.utils.handlers.ResultCombinedHandler.open"]], "open() (funman.utils.handlers.resulthandler method)": [[8, "funman.utils.handlers.ResultHandler.open"]], "plus() (in module funman.utils.math_utils)": [[8, "funman.utils.math_utils.plus"]], "process() (funman.utils.handlers.noopresulthandler method)": [[8, "funman.utils.handlers.NoopResultHandler.process"]], "process() (funman.utils.handlers.resultcombinedhandler method)": [[8, "funman.utils.handlers.ResultCombinedHandler.process"]], "process() (funman.utils.handlers.resulthandler method)": [[8, "funman.utils.handlers.ResultHandler.process"]], "run() (funman.utils.handlers.waitaction method)": [[8, "funman.utils.handlers.WaitAction.run"]], "serialize() (funman.utils.smtlib_utils.funmansmtlibscript method)": [[8, "funman.utils.smtlib_utils.FUNMANSmtLibScript.serialize"]], "smtlibscript_from_formula() (in module funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.smtlibscript_from_formula"]], "smtlibscript_from_formula_list() (in module funman.utils.smtlib_utils)": [[8, "funman.utils.smtlib_utils.smtlibscript_from_formula_list"]], "walk_real_constant() (funman.utils.smtlib_utils.funmansmtdagprinter method)": [[8, "funman.utils.smtlib_utils.FUNMANSmtDagPrinter.walk_real_constant"]], "walk_real_constant() (funman.utils.smtlib_utils.funmansmtprinter method)": [[8, "funman.utils.smtlib_utils.FUNMANSmtPrinter.walk_real_constant"]]}})