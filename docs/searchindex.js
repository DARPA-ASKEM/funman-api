Search.setIndex({"docnames": ["classes", "funman", "funman.examples", "funman.scenario", "index", "packages", "use_cases"], "filenames": ["classes.rst", "funman.rst", "funman.examples.rst", "funman.scenario.rst", "index.rst", "packages.rst", "use_cases.rst"], "titles": ["Class Diagram", "funman package", "funman.examples package", "funman.scenario package", "Welcome to funman\u2019s documentation!", "Package Diagram", "Use Cases"], "terms": {"1": [0, 1, 2, 3, 4, 5, 6], "0": [0, 1, 2, 3, 4, 5, 6], "The": [1, 3, 6], "implement": 1, "multipl": 1, "simul": [1, 3, 4], "analysi": [1, 3, 6], "method": 1, "current": 1, "includ": [1, 3], "run": [1, 6], "origin": [1, 6], "queri": [1, 2, 6], "result": [1, 3, 6], "paramet": [1, 2, 3, 4], "synthesi": [1, 3, 4], "gener": [1, 3], "feasibl": [1, 3, 6], "valu": [1, 3, 6], "class": [1, 2, 3, 4, 6], "base": [1, 2, 3, 6], "object": [1, 2, 3], "function": [1, 6], "i": [1, 3, 6], "main": [1, 4], "entri": 1, "point": [1, 3, 6], "perform": 1, "solv": [1, 3, 6], "an": [1, 6], "scenario": [1, 6], "analysisscenario": [1, 3], "subject": 1, "set": [1, 6], "configur": [1, 6], "option": [1, 3], "searchconfig": [1, 3, 6], "problem": [1, 3], "none": [1, 3], "analysisscenarioresult": [1, 3], "thi": [1, 3, 6], "Its": 1, "input": [1, 6], "describ": 1, "setup": 1, "techniqu": 1, "return": [1, 3, 6], "which": [1, 3, 6], "compris": 1, "all": [1, 3, 6], "relev": 1, "output": 1, "pertain": 1, "descript": [1, 3], "typic": 1, "algorithm": [1, 3], "appli": 1, "analyz": 1, "default": 1, "data": [1, 3, 6], "statist": [1, 3], "other": 1, "inform": 1, "produc": 1, "type": [1, 3, 6], "exampl": [1, 6], "chime": [1, 6], "encode_time_horizon": [1, 2], "encode_time_horizon_lay": [1, 2], "make_chime_model": [1, 2], "make_chime_queri": [1, 2], "make_chime_vari": [1, 2], "make_dynamics_s1": [1, 2], "make_dynamics_s2": [1, 2], "make_dynamics_s3": [1, 2], "make_model": [1, 2], "plot": [1, 3], "parameter_synthesi": 1, "parametersynthesisscenario": [1, 3, 6], "parametersynthesisscenarioresult": [1, 3], "contain": [1, 3, 6], "definit": [1, 3], "defint": 1, "us": [1, 3, 4], "within": 1, "helper": 1, "math": 1, "oper": 1, "gt": 1, "lh": 1, "union": [1, 3], "int": [1, 6], "float": 1, "liter": 1, "inf": 1, "rh": 1, "bool": 1, "greater": 1, "than": 1, "comparison": 1, "number": [1, 6], "left": 1, "hand": 1, "side": 1, "right": 1, "gte": 1, "equal": [1, 6], "lt": 1, "less": 1, "lte": 1, "repres": [1, 6], "interact": 1, "formula": [1, 6], "name": 1, "lb": 1, "str": [1, 3], "ub": 1, "symbol": [1, 6], "parameterspac": [1, 3, 6], "defin": [1, 3, 6], "represent": 1, "space": [1, 3, 6], "can": [1, 6], "featur": 1, "These": [1, 6], "ar": [1, 3, 6], "collect": 1, "box": 1, "either": [1, 3], "known": 1, "true": [1, 3], "fals": [1, 2, 3], "true_box": 1, "list": [1, 3, 6], "false_box": 1, "static": 1, "compar": [1, 4], "ps1": 1, "ps2": 1, "construct_all_equ": [1, 6], "p": [1, 6], "intersect": [1, 6], "project": 1, "symmetric_differ": 1, "boxsearch": [1, 3, 6], "expand": 1, "rval": 1, "queue": 1, "episod": 1, "boxsearchepisod": 1, "id": 1, "more_work": 1, "condit": 1, "idle_mutex": 1, "lock": 1, "idle_flag": 1, "event": 1, "A": [1, 6], "singl": [1, 6], "process": 1, "evalu": [1, 6], "unknown_box": 1, "exit": 1, "when": 1, "empti": 1, "For": 1, "each": [1, 6], "check": 1, "whether": [1, 6], "infeas": [1, 3], "If": 1, "both": [1, 6], "split": 1, "two": [1, 6], "ad": 1, "push": 1, "onto": 1, "end": 1, "": 1, "work": 1, "dict": [1, 3], "map": 1, "uniqu": 1, "design": 1, "share": 1, "searchepisod": 1, "creat": [1, 6], "store": 1, "progress": 1, "spawn": 1, "sever": 1, "parallel": 1, "It": [1, 6], "treat": 1, "zeroth": 1, "special": [1, 6], "allow": 1, "initi": 1, "synthes": [1, 3, 6], "final": 1, "abc": 1, "execut": [1, 6], "one": [1, 3, 6], "support": 1, "manag": 1, "syncmanag": 1, "add_fals": 1, "add_false_point": 1, "add_tru": 1, "add_true_point": 1, "add_unknown": 1, "extract_point": 1, "get_box_to_plot": 1, "get_unknown": 1, "initial_box": 1, "initialize_box": 1, "expander_count": 1, "on_iter": 1, "on_start": 1, "interv": 1, "searchstatist": 1, "waitact": 1, "resulthandl": 1, "resultcombinedhandl": 1, "behavior": [1, 6], "dure": [1, 6], "contains_point": 1, "finit": 1, "from_dict": 1, "intersect_two_box": 1, "b": 1, "given": 1, "2": [1, 6], "a0": 1, "a1": 1, "b0": 1, "b1": [1, 6], "thei": 1, "do": 1, "subtract_two_1d_interv": 1, "part": 1, "doe": 1, "symmetric_difference_two_box": 1, "to_dict": 1, "to_smt": 1, "width": 1, "contains_valu": 1, "midpoint": 1, "handler": 1, "close": 1, "open": 1, "abstract": [1, 3], "toler": [1, 6], "01": 1, "queue_timeout": 1, "number_of_process": 1, "8": 1, "wait_timeout": 1, "wait_act": 1, "wait_action_timeout": 1, "05": 1, "read_cach": 1, "decode_labeled_box": 1, "decode_labeled_object": 1, "obj": 1, "decode_labeled_point": 1, "encode_false_box": 1, "encode_false_point": 1, "encode_true_box": 1, "encode_true_point": 1, "encode_unknown_box": 1, "encode_unknown_point": 1, "init": 2, "dynam": 2, "horizon": 2, "num_timepoint": 2, "var": 2, "infect": [2, 6], "n": 2, "threshold": [2, 6], "epoch": [2, 6], "20": [2, 6], "21": 2, "60": 2, "population_s": 2, "1002": 2, "infectious_dai": 2, "14": 2, "infected_threshold": [2, 6], "linear": 2, "subpackag": [3, 4], "capabl": 3, "classmethod": 3, "config": [3, 4, 6], "model": [3, 4], "fnode": 3, "search": [3, 4, 6], "identifi": 3, "particular": 3, "multi": 3, "dimension": 3, "dimens": 3, "per": 3, "region": 3, "where": [3, 6], "valid": [3, 6], "invalid": 3, "decompos": 3, "ani": [3, 6], "case": 4, "translat": 4, "fn": 4, "constant": 4, "time": 4, "depend": 4, "beta": 4, "bi": 4, "layer": 4, "diagram": 4, "packag": 4, "submodul": 4, "math_util": 4, "parameter_spac": 4, "search_episod": 4, "search_util": 4, "index": 4, "modul": 4, "page": 4, "involv": 6, "funman": 6, "reason": 6, "about": 6, "sir": 6, "first": 6, "query_simul": 6, "In": 6, "below": 6, "run_chime_sir": 6, "cross": 6, "provid": 6, "construct": 6, "instanc": 6, "queryablegromet": 6, "gromet": 6, "file": 6, "from": 6, "ask": 6, "answer": 6, "correspond": 6, "chime_sir": 6, "exce": 6, "specifi": 6, "onc": 6, "step": 6, "test": 6, "succe": 6, "agre": 6, "respons": 6, "def": 6, "compare_against_chime_fn": 6, "gromet_path": 6, "does_not_cross_threshold": 6, "sim_result": 6, "i_t": 6, "q_sim": 6, "from_gromet_fil": 6, "q_gromet": 6, "f": 6, "foral": 6, "t": 6, "assert": 6, "same": 6, "call": 6, "chime_sir_while_loop": 6, "auto": 6, "json": 6, "130": 6, "formul": 6, "over": 6, "three": 6, "e": 6, "tripl": 6, "modifi": 6, "variant": 6, "entir": 6, "akin": 6, "read": 6, "note": 6, "stub": 6, "more": 6, "found": 6, "determin": 6, "respect": 6, "test_parameter_synthesi": 6, "prepar": 6, "gromet_file_1": 6, "extract": 6, "n_p": 6, "3": 6, "n_dai": 6, "dai": 6, "gromet_org": 6, "gromet_file_2": 6, "modif": 6, "40": 6, "gromet_sub": 6, "some": 6, "get": 6, "ps_b1_b2_b3": 6, "synthesize_paramet": 6, "ps_bc": 6, "ps_eq": 6, "b2": 6, "b3": 6, "run_chime_sir_bl": 6, "queryablebilay": 6, "bilay": 6, "compare_against_chime_bilay": 6, "bilayer_fil": 6, "print": 6, "from_fil": 6, "q_bilay": 6, "chime_sir_dynamics_bilay": 6, "variabl": 6, "assign": 6, "interfac": 6, "follow": 6, "x": 6, "y": 6, "also": 6, "sai": 6, "5": 6, "10": 6, "12": 6, "remain": 6, "have": 6, "test_parameter_synthesis_2d": 6, "real": 6, "And": 6, "le": 6, "ge": 6, "1e": 6}, "objects": {"": [[1, 0, 0, "-", "funman"]], "funman": [[1, 1, 1, "", "Funman"], [1, 0, 0, "-", "config"], [1, 0, 0, "-", "constants"], [2, 0, 0, "-", "examples"], [1, 3, 1, "", "main"], [1, 0, 0, "-", "math_utils"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "parameter_space"], [3, 0, 0, "-", "scenario"], [1, 0, 0, "-", "search"], [1, 0, 0, "-", "search_episode"], [1, 0, 0, "-", "search_utils"]], "funman.Funman": [[1, 2, 1, "", "solve"]], "funman.config": [[1, 1, 1, "", "Config"]], "funman.examples": [[2, 0, 0, "-", "chime"]], "funman.examples.chime": [[2, 1, 1, "", "CHIME"]], "funman.examples.chime.CHIME": [[2, 2, 1, "", "encode_time_horizon"], [2, 2, 1, "", "encode_time_horizon_layered"], [2, 2, 1, "", "make_chime_model"], [2, 2, 1, "", "make_chime_query"], [2, 2, 1, "", "make_chime_variables"], [2, 2, 1, "", "make_dynamics_s1"], [2, 2, 1, "", "make_dynamics_s2"], [2, 2, 1, "", "make_dynamics_s3"], [2, 2, 1, "", "make_model"]], "funman.math_utils": [[1, 3, 1, "", "gt"], [1, 3, 1, "", "gte"], [1, 3, 1, "", "lt"], [1, 3, 1, "", "lte"]], "funman.model": [[1, 1, 1, "", "Model"], [1, 1, 1, "", "Parameter"], [1, 1, 1, "", "Query"]], "funman.parameter_space": [[1, 1, 1, "", "ParameterSpace"]], "funman.parameter_space.ParameterSpace": [[1, 2, 1, "", "compare"], [1, 2, 1, "", "construct_all_equal"], [1, 2, 1, "", "intersect"], [1, 2, 1, "", "project"], [1, 2, 1, "", "symmetric_difference"]], "funman.scenario": [[3, 1, 1, "", "AnalysisScenario"], [3, 1, 1, "", "AnalysisScenarioResult"], [3, 0, 0, "-", "parameter_synthesis"]], "funman.scenario.AnalysisScenario": [[3, 2, 1, "", "simulate"], [3, 2, 1, "", "solve"]], "funman.scenario.AnalysisScenarioResult": [[3, 2, 1, "", "plot"]], "funman.scenario.parameter_synthesis": [[3, 1, 1, "", "ParameterSynthesisScenario"], [3, 1, 1, "", "ParameterSynthesisScenarioResult"]], "funman.scenario.parameter_synthesis.ParameterSynthesisScenario": [[3, 2, 1, "", "solve"]], "funman.search": [[1, 1, 1, "", "BoxSearch"]], "funman.search.BoxSearch": [[1, 2, 1, "", "expand"], [1, 2, 1, "", "search"], [1, 2, 1, "", "split"]], "funman.search_episode": [[1, 1, 1, "", "BoxSearchEpisode"], [1, 1, 1, "", "SearchEpisode"]], "funman.search_episode.BoxSearchEpisode": [[1, 2, 1, "", "add_false"], [1, 2, 1, "", "add_false_point"], [1, 2, 1, "", "add_true"], [1, 2, 1, "", "add_true_point"], [1, 2, 1, "", "add_unknown"], [1, 2, 1, "", "extract_point"], [1, 2, 1, "", "get_box_to_plot"], [1, 2, 1, "", "get_unknown"], [1, 2, 1, "", "initial_box"], [1, 2, 1, "", "initialize_boxes"], [1, 2, 1, "", "on_iteration"], [1, 2, 1, "", "on_start"]], "funman.search_utils": [[1, 1, 1, "", "Box"], [1, 1, 1, "", "Interval"], [1, 1, 1, "", "Point"], [1, 1, 1, "", "ResultCombinedHandler"], [1, 1, 1, "", "ResultHandler"], [1, 1, 1, "", "SearchConfig"], [1, 1, 1, "", "SearchStatistics"], [1, 1, 1, "", "WaitAction"], [1, 3, 1, "", "decode_labeled_box"], [1, 3, 1, "", "decode_labeled_object"], [1, 3, 1, "", "decode_labeled_point"], [1, 3, 1, "", "encode_false_box"], [1, 3, 1, "", "encode_false_point"], [1, 3, 1, "", "encode_true_box"], [1, 3, 1, "", "encode_true_point"], [1, 3, 1, "", "encode_unknown_box"], [1, 3, 1, "", "encode_unknown_point"]], "funman.search_utils.Box": [[1, 2, 1, "", "contains"], [1, 2, 1, "", "contains_point"], [1, 2, 1, "", "finite"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "intersect_two_boxes"], [1, 2, 1, "", "intersection"], [1, 2, 1, "", "intersects"], [1, 2, 1, "", "split"], [1, 2, 1, "", "subtract_two_1d_intervals"], [1, 2, 1, "", "symmetric_difference_two_boxes"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_smt"], [1, 2, 1, "", "width"]], "funman.search_utils.Interval": [[1, 2, 1, "", "contains"], [1, 2, 1, "", "contains_value"], [1, 2, 1, "", "finite"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "intersection"], [1, 2, 1, "", "intersects"], [1, 2, 1, "", "midpoint"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_smt"], [1, 2, 1, "", "width"]], "funman.search_utils.Point": [[1, 2, 1, "", "from_dict"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_smt"]], "funman.search_utils.ResultCombinedHandler": [[1, 2, 1, "", "close"], [1, 2, 1, "", "open"], [1, 2, 1, "", "process"]], "funman.search_utils.ResultHandler": [[1, 2, 1, "", "close"], [1, 2, 1, "", "open"], [1, 2, 1, "", "process"]], "funman.search_utils.WaitAction": [[1, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"class": 0, "diagram": [0, 5], "funman": [1, 2, 3, 4], "packag": [1, 2, 3, 5], "subpackag": 1, "submodul": [1, 2, 3], "config": 1, "constant": [1, 6], "math_util": 1, "model": [1, 6], "parameter_spac": 1, "search": 1, "search_episod": 1, "search_util": 1, "exampl": 2, "chime": 2, "scenario": 3, "parameter_synthesi": 3, "welcom": 4, "": 4, "document": 4, "content": 4, "indic": 4, "tabl": 4, "us": 6, "case": 6, "compar": 6, "translat": 6, "fn": 6, "simul": 6, "time": 6, "depend": 6, "beta": 6, "bi": 6, "layer": 6, "paramet": 6, "synthesi": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Class Diagram": [[0, "class-diagram"]], "funman package": [[1, "module-funman"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "funman.config": [[1, "funman-config"]], "funman.constants": [[1, "funman-constants"]], "funman.math_utils": [[1, "funman-math-utils"]], "funman.model": [[1, "funman-model"]], "funman.parameter_space": [[1, "funman-parameter-space"]], "funman.search": [[1, "funman-search"]], "funman.search_episode": [[1, "funman-search-episode"]], "funman.search_utils": [[1, "funman-search-utils"]], "funman.examples package": [[2, "module-funman.examples"]], "funman.examples.chime": [[2, "funman-examples-chime"]], "funman.scenario package": [[3, "module-funman.scenario"]], "funman.scenario.parameter_synthesis": [[3, "funman-scenario-parameter-synthesis"]], "Welcome to funman\u2019s documentation!": [[4, "welcome-to-funman-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Package Diagram": [[5, "package-diagram"]], "Use Cases": [[6, "use-cases"]], "Compare Translated FN to Simulator:": [[6, "compare-translated-fn-to-simulator"]], "Compare Constant and Time-dependent Betas:": [[6, "compare-constant-and-time-dependent-betas"]], "Compare Bi-Layer Model to Bi-Layer Simulator:": [[6, "compare-bi-layer-model-to-bi-layer-simulator"]], "Parameter Synthesis": [[6, "parameter-synthesis"]]}, "indexentries": {"box (class in funman.search_utils)": [[1, "funman.search_utils.Box"]], "boxsearch (class in funman.search)": [[1, "funman.search.BoxSearch"]], "boxsearchepisode (class in funman.search_episode)": [[1, "funman.search_episode.BoxSearchEpisode"]], "config (class in funman.config)": [[1, "funman.config.Config"]], "funman (class in funman)": [[1, "funman.Funman"]], "interval (class in funman.search_utils)": [[1, "funman.search_utils.Interval"]], "model (class in funman.model)": [[1, "funman.model.Model"]], "parameter (class in funman.model)": [[1, "funman.model.Parameter"]], "parameterspace (class in funman.parameter_space)": [[1, "funman.parameter_space.ParameterSpace"]], "point (class in funman.search_utils)": [[1, "funman.search_utils.Point"]], "query (class in funman.model)": [[1, "funman.model.Query"]], "resultcombinedhandler (class in funman.search_utils)": [[1, "funman.search_utils.ResultCombinedHandler"]], "resulthandler (class in funman.search_utils)": [[1, "funman.search_utils.ResultHandler"]], "searchconfig (class in funman.search_utils)": [[1, "funman.search_utils.SearchConfig"]], "searchepisode (class in funman.search_episode)": [[1, "funman.search_episode.SearchEpisode"]], "searchstatistics (class in funman.search_utils)": [[1, "funman.search_utils.SearchStatistics"]], "waitaction (class in funman.search_utils)": [[1, "funman.search_utils.WaitAction"]], "add_false() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.add_false"]], "add_false_point() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.add_false_point"]], "add_true() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.add_true"]], "add_true_point() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.add_true_point"]], "add_unknown() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.add_unknown"]], "close() (funman.search_utils.resultcombinedhandler method)": [[1, "funman.search_utils.ResultCombinedHandler.close"]], "close() (funman.search_utils.resulthandler method)": [[1, "funman.search_utils.ResultHandler.close"]], "compare() (funman.parameter_space.parameterspace static method)": [[1, "funman.parameter_space.ParameterSpace.compare"]], "construct_all_equal() (funman.parameter_space.parameterspace static method)": [[1, "funman.parameter_space.ParameterSpace.construct_all_equal"]], "contains() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.contains"]], "contains() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.contains"]], "contains_point() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.contains_point"]], "contains_value() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.contains_value"]], "decode_labeled_box() (in module funman.search_utils)": [[1, "funman.search_utils.decode_labeled_box"]], "decode_labeled_object() (in module funman.search_utils)": [[1, "funman.search_utils.decode_labeled_object"]], "decode_labeled_point() (in module funman.search_utils)": [[1, "funman.search_utils.decode_labeled_point"]], "encode_false_box() (in module funman.search_utils)": [[1, "funman.search_utils.encode_false_box"]], "encode_false_point() (in module funman.search_utils)": [[1, "funman.search_utils.encode_false_point"]], "encode_true_box() (in module funman.search_utils)": [[1, "funman.search_utils.encode_true_box"]], "encode_true_point() (in module funman.search_utils)": [[1, "funman.search_utils.encode_true_point"]], "encode_unknown_box() (in module funman.search_utils)": [[1, "funman.search_utils.encode_unknown_box"]], "encode_unknown_point() (in module funman.search_utils)": [[1, "funman.search_utils.encode_unknown_point"]], "expand() (funman.search.boxsearch method)": [[1, "funman.search.BoxSearch.expand"]], "extract_point() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.extract_point"]], "finite() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.finite"]], "finite() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.finite"]], "from_dict() (funman.search_utils.box static method)": [[1, "funman.search_utils.Box.from_dict"]], "from_dict() (funman.search_utils.interval static method)": [[1, "funman.search_utils.Interval.from_dict"]], "from_dict() (funman.search_utils.point static method)": [[1, "funman.search_utils.Point.from_dict"]], "funman": [[1, "module-funman"]], "funman.config": [[1, "module-funman.config"]], "funman.constants": [[1, "module-funman.constants"]], "funman.math_utils": [[1, "module-funman.math_utils"]], "funman.model": [[1, "module-funman.model"]], "funman.parameter_space": [[1, "module-funman.parameter_space"]], "funman.search": [[1, "module-funman.search"]], "funman.search_episode": [[1, "module-funman.search_episode"]], "funman.search_utils": [[1, "module-funman.search_utils"]], "get_box_to_plot() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.get_box_to_plot"]], "get_unknown() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.get_unknown"]], "gt() (in module funman.math_utils)": [[1, "funman.math_utils.gt"]], "gte() (in module funman.math_utils)": [[1, "funman.math_utils.gte"]], "initial_box() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.initial_box"]], "initialize_boxes() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.initialize_boxes"]], "intersect() (funman.parameter_space.parameterspace static method)": [[1, "funman.parameter_space.ParameterSpace.intersect"]], "intersect_two_boxes() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.intersect_two_boxes"]], "intersection() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.intersection"]], "intersection() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.intersection"]], "intersects() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.intersects"]], "intersects() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.intersects"]], "lt() (in module funman.math_utils)": [[1, "funman.math_utils.lt"]], "lte() (in module funman.math_utils)": [[1, "funman.math_utils.lte"]], "main() (in module funman)": [[1, "funman.main"]], "midpoint() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.midpoint"]], "module": [[1, "module-funman"], [1, "module-funman.config"], [1, "module-funman.constants"], [1, "module-funman.math_utils"], [1, "module-funman.model"], [1, "module-funman.parameter_space"], [1, "module-funman.search"], [1, "module-funman.search_episode"], [1, "module-funman.search_utils"], [2, "module-funman.examples"], [2, "module-funman.examples.chime"], [3, "module-funman.scenario"], [3, "module-funman.scenario.parameter_synthesis"]], "on_iteration() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.on_iteration"]], "on_start() (funman.search_episode.boxsearchepisode method)": [[1, "funman.search_episode.BoxSearchEpisode.on_start"]], "open() (funman.search_utils.resultcombinedhandler method)": [[1, "funman.search_utils.ResultCombinedHandler.open"]], "open() (funman.search_utils.resulthandler method)": [[1, "funman.search_utils.ResultHandler.open"]], "process() (funman.search_utils.resultcombinedhandler method)": [[1, "funman.search_utils.ResultCombinedHandler.process"]], "process() (funman.search_utils.resulthandler method)": [[1, "funman.search_utils.ResultHandler.process"]], "project() (funman.parameter_space.parameterspace static method)": [[1, "funman.parameter_space.ParameterSpace.project"]], "run() (funman.search_utils.waitaction method)": [[1, "funman.search_utils.WaitAction.run"]], "search() (funman.search.boxsearch method)": [[1, "funman.search.BoxSearch.search"]], "solve() (funman.funman method)": [[1, "funman.Funman.solve"]], "split() (funman.search.boxsearch method)": [[1, "funman.search.BoxSearch.split"]], "split() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.split"]], "subtract_two_1d_intervals() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.subtract_two_1d_intervals"]], "symmetric_difference() (funman.parameter_space.parameterspace static method)": [[1, "funman.parameter_space.ParameterSpace.symmetric_difference"]], "symmetric_difference_two_boxes() (funman.search_utils.box static method)": [[1, "funman.search_utils.Box.symmetric_difference_two_boxes"]], "to_dict() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.to_dict"]], "to_dict() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.to_dict"]], "to_dict() (funman.search_utils.point method)": [[1, "funman.search_utils.Point.to_dict"]], "to_smt() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.to_smt"]], "to_smt() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.to_smt"]], "to_smt() (funman.search_utils.point method)": [[1, "funman.search_utils.Point.to_smt"]], "width() (funman.search_utils.box method)": [[1, "funman.search_utils.Box.width"]], "width() (funman.search_utils.interval method)": [[1, "funman.search_utils.Interval.width"]], "chime (class in funman.examples.chime)": [[2, "funman.examples.chime.CHIME"]], "encode_time_horizon() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.encode_time_horizon"]], "encode_time_horizon_layered() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.encode_time_horizon_layered"]], "funman.examples": [[2, "module-funman.examples"]], "funman.examples.chime": [[2, "module-funman.examples.chime"]], "make_chime_model() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_chime_model"]], "make_chime_query() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_chime_query"]], "make_chime_variables() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_chime_variables"]], "make_dynamics_s1() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_dynamics_s1"]], "make_dynamics_s2() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_dynamics_s2"]], "make_dynamics_s3() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_dynamics_s3"]], "make_model() (funman.examples.chime.chime method)": [[2, "funman.examples.chime.CHIME.make_model"]], "analysisscenario (class in funman.scenario)": [[3, "funman.scenario.AnalysisScenario"]], "analysisscenarioresult (class in funman.scenario)": [[3, "funman.scenario.AnalysisScenarioResult"]], "parametersynthesisscenario (class in funman.scenario.parameter_synthesis)": [[3, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario"]], "parametersynthesisscenarioresult (class in funman.scenario.parameter_synthesis)": [[3, "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult"]], "funman.scenario": [[3, "module-funman.scenario"]], "funman.scenario.parameter_synthesis": [[3, "module-funman.scenario.parameter_synthesis"]], "plot() (funman.scenario.analysisscenarioresult class method)": [[3, "funman.scenario.AnalysisScenarioResult.plot"]], "simulate() (funman.scenario.analysisscenario class method)": [[3, "funman.scenario.AnalysisScenario.simulate"]], "solve() (funman.scenario.analysisscenario class method)": [[3, "funman.scenario.AnalysisScenario.solve"]], "solve() (funman.scenario.parameter_synthesis.parametersynthesisscenario method)": [[3, "funman.scenario.parameter_synthesis.ParameterSynthesisScenario.solve"]]}})